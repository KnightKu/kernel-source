From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: [S390] initial cr0 bits
Patch-mainline: v3.1-rc1
Git-commit: c76e70d3784e00a89bf8359bcca51ae366b41527
References: bnc#1036056, LTC#153612

Description:  kernel: protection exceptions on instruction fetch
Symptom:      Protection exceptions for instruction fetches from large page
              mappings on machines with the instruction-execution protection
              facility but without kernel support for the facility.
Problem:      The initial content for the control-register 0 is established
              in early code with a default value that includes the enablement
              bit for the instruction-execution facility. This goes back to
              the original 64-bit port where the cr0 value for an ESA system
              has been carried over to the zArch kernel.
Solution:     Remove all bits from the initial value for control-register 0
              except for the secondary-space control and the AFP-register
              control.
Reproduction: Establish a large page containing instructions and try to
              exeute them. On a machine with the instruction-execution
              protection facility a protection exception will occur.

Upstream-Description:

              [S390] initial cr0 bits

              Remove outdated bits from the initial cr0 register.

              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 arch/s390/kernel/head64.S |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/s390/kernel/head64.S
+++ b/arch/s390/kernel/head64.S
@@ -46,7 +46,7 @@ startup_continue:
 	.align	16
 .LPG1:
 .Lentry:.quad	0x0000000180000000,_stext
-.Lctl:	.quad	0x04350002		# cr0: various things
+.Lctl:	.quad	0x04040002		# cr0: various things
 	.quad	0			# cr1: primary space segment table
 	.quad	.Lduct			# cr2: dispatchable unit control table
 	.quad	0			# cr3: instruction authorization
