From: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Subject: s390/mem_detect: use unsigned longs
Patch-mainline: v4.5-rc1
Git-commit: 423d5b364c108c00d98e3da9f72d598e8f2ef948
References: FATE#324071, LTC#158956

Summary:     kernel: Transparent Facility Bit Handling
Description: When a guest is initializing, KVM provides facility bits that can
             be successfully used by the guest, by applying a mask to the
             bitfield returned by the STFLE instruction, so that only the
             facility bits actually supported by KVM are passed to the guest.
             
             Some facilities need support in the hypervisor in order to work,
             while others are handled by the system and do not need explicit
             support from the hypervisor.
             
             Until now the mask to select the bits to pass to the guest was
             maintained manually; this patchset allows KVM to pass to the guest
             all the facility bits that do not require hypervisor support.
             This allows new hardware features that do not need hypervisor
             support to be available for guests without having to patch the
             hypervisor every time.

Upstream-Description:

             s390/mem_detect: use unsigned longs

             The memory detection code historically had to use unsigned long long
             since the machine reported the true memory size (>4GB) even if the
             virtual machine was running in ESA/390 mode.

             Since the old code is gone use unsigned long everywhere and also get
             rid of an unused ADDR2G define.

             (this patch converts all long longs within sclp_info to longs)

             There are many more possible conversions, however that can be done if
             somebody touches the corresponding code.  Since people started to
             convert unrelated long types to long longs because of the types within
             struct sclp_info convert this now.

             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/include/asm/sclp.h |    8 ++++----
 arch/s390/mm/mem_detect.c    |    7 ++-----
 2 files changed, 6 insertions(+), 9 deletions(-)

--- a/arch/s390/include/asm/sclp.h
+++ b/arch/s390/include/asm/sclp.h
@@ -61,12 +61,12 @@ struct sclp_info {
 	unsigned int mtid;
 	unsigned int mtid_cp;
 	unsigned int mtid_prev;
-	unsigned long long rzm;
-	unsigned long long rnmax;
-	unsigned long long hamax;
+	unsigned long rzm;
+	unsigned long rnmax;
+	unsigned long hamax;
 	unsigned int max_cores;
 	unsigned long hsa_size;
-	unsigned long long facilities;
+	unsigned long facilities;
 };
 extern struct sclp_info sclp;
 
--- a/arch/s390/mm/mem_detect.c
+++ b/arch/s390/mm/mem_detect.c
@@ -14,8 +14,6 @@
 #include <asm/sclp.h>
 #include <asm/setup.h>
 
-#define ADDR2G (1ULL << 31)
-
 #define CHUNK_READ_WRITE 0
 #define CHUNK_READ_ONLY  1
 
@@ -27,15 +25,14 @@ static inline void memblock_physmem_add(
 
 void __init detect_memory_memblock(void)
 {
-	unsigned long long memsize, rnmax, rzm;
-	unsigned long addr, size;
+	unsigned long memsize, rnmax, rzm, addr, size;
 	int type;
 
 	rzm = sclp.rzm;
 	rnmax = sclp.rnmax;
 	memsize = rzm * rnmax;
 	if (!rzm)
-		rzm = 1ULL << 17;
+		rzm = 1UL << 17;
 	max_physmem_end = memsize;
 	addr = 0;
 	/* keep memblock lists close to the kernel */
