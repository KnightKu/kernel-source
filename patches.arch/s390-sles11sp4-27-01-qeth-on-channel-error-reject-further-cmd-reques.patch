From: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Subject: s390/qeth: on channel error, reject further cmd requests
Patch-mainline: v4.16-rc7
Git-commit: a6c3d93963e4b333c764fde69802c3ea9eaa9d5c
References: bnc#1088343, LTC#165985

Description:  qeth: on channel error, reject further cmd requests
Symptom:      system-wide stalls during qeth device recovery
Problem:      If a cmd IO request is submitted right at the start of
              the recovery process, the request may stall in the cmd
              IO logic without receiving a response. Since cmd IO
              busy-polls for completion, this stalls the system until
              the request times out.
Solution:     Right when a channel error is detected, flag the cmd IO
              path as in-error and reject any further cmd request.
Reproduction: Live Relocation of a z/VM Guest,  while snmpd is running.
              Heavily timing-dependent.

Upstream-Description:

              s390/qeth: on channel error, reject further cmd requests

              When the IRQ handler determines that one of the cmd IO channels has
              failed and schedules recovery, block any further cmd requests from
              being submitted. The request would inevitably stall, and prevent the
              recovery from making progress until the request times out.

              This sort of error was observed after Live Guest Relocation, where
              the pending IO on the READ channel intentionally gets terminated to
              kick-start recovery. Simultaneously the guest executed SIOCETHTOOL,
              triggering qeth to issue a QUERY CARD INFO command. The command
              then stalled in the inoperabel WRITE channel.

              Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
              Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/net/qeth_core_main.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -1113,6 +1113,7 @@ static void qeth_irq(struct ccw_device *
 		}
 		rc = qeth_get_problem(cdev, irb);
 		if (rc) {
+			card->read_or_write_problem = 1;
 			qeth_clear_ipacmd_list(card);
 			qeth_schedule_recovery(card);
 			goto out;
