From: Harald Freudenberger <freude@de.ibm.com>
Subject: [PATCH] [BZ 149737] kernel: Fix hang condition on crypto card config-off
Patch-mainline: Never, obsolete by Git-commit: 3f3007afda8bb731a3422430752ca91ddc102e4d
References: bsc#1016320,LTC149737

Description:  kernel: Fix hang condition on crypto card config-off
Symptom:      Process hang forever when trying to read
              from /dev/hwrng and the crypto card is configured
              off on the Support Element.
Problem:      When there is a request for fetchig hardware random
              data received by the device driver and the device
              is disappering because an administrator on the SE
              just configures this card off the code may run
              into a deadlock situation where two kernel tasks
              will wait onto the same mutex. This ends up in having
              the calling process block forever instead of returning
              from ioctl() with EIO. Also the reference counting
              for the ap bus devices was not correct leading to
              on device release not finally releasing the device
              struct data.
              This problem only arrises in combination with the
              hw rng provided by the zcrypt device driver. Older
              kernel versions where the zcrypt device driver does
              not register itself as a hw random source are not
              affected.
Solution:     Fixed by letting the kernel thread calling the
              ap_scan_bus function every 30 seconds do the
              job of removing devices which where switched off
              the configuration. The application calling the
              device driver is not involved any more and the designed
              task is doing it's job. Also the reference counting
              has been fixed.
Reproduction: Run a process which is heavily pulling data from
              /dev/hwrng, e. g. dd if=/dev/hwrng of=/dev/null.
              Now switch off all CCA adapters configured for this
              LPAR on the Service Element. The dd command should
              not hang forever but fail with.
Upstream-ID:  n/a
Problem-ID:   149737

Signed-off-by: Harald Freudenberger <freude@de.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 drivers/s390/crypto/ap_bus.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@ -1779,15 +1779,17 @@ void ap_queue_message(struct ap_device *
 			rc = __ap_queue_message(ap_dev, ap_msg);
 		if (!rc)
 			wake_up(&ap_poll_wait);
-		if (rc == -ENODEV)
+		if (rc == -ENODEV) {
 			ap_dev->unregistered = 1;
+			ap_msg->receive(ap_dev, ap_msg, ERR_PTR(-ENODEV));
+		}
 	} else {
 		ap_msg->receive(ap_dev, ap_msg, ERR_PTR(-ENODEV));
 		rc = -ENODEV;
 	}
 	spin_unlock_bh(&ap_dev->lock);
-	if (rc == -ENODEV)
-		device_unregister(&ap_dev->device);
+
+	/* no device_unregister(), let ap_scan_bus() do the job */
 }
 EXPORT_SYMBOL(ap_queue_message);
 
