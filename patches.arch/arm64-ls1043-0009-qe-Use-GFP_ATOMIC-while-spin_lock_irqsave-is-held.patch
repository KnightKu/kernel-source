From 4efc13e49656f690f4a6c7ad21ef138d23d878aa Mon Sep 17 00:00:00 2001
From: Saurabh Sengar <saurabh.truth@gmail.com>
Date: Sun, 24 Jan 2016 12:24:06 +0530
Subject: [PATCH 009/221] qe: Use GFP_ATOMIC while spin_lock_irqsave is held
Git-commit: 66923a60ad80a963c0cd5ceecba9ba377cefba47
Patch-mainline: v4.6-rc1
References: FATE#320030

cpm_muram_alloc_common is called twice and both the times
spin_lock_irqsave is held.
Using GFP_KERNEL can sleep in spin_lock_irqsave context and cause
deadlock

Signed-off-by: Saurabh Sengar <saurabh.truth@gmail.com>
Signed-off-by: Scott Wood <oss@buserror.net>
Signed-off-by: Alexander Graf <agraf@suse.de>

---
 drivers/soc/fsl/qe/qe_common.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/soc/fsl/qe/qe_common.c b/drivers/soc/fsl/qe/qe_common.c
index e18159a..41eff80 100644
--- a/drivers/soc/fsl/qe/qe_common.c
+++ b/drivers/soc/fsl/qe/qe_common.c
@@ -121,7 +121,7 @@ static unsigned long cpm_muram_alloc_common(unsigned long size,
 		goto out2;
 	start = start - GENPOOL_OFFSET;
 	memset_io(cpm_muram_addr(start), 0, size);
-	entry = kmalloc(sizeof(*entry), GFP_KERNEL);
+	entry = kmalloc(sizeof(*entry), GFP_ATOMIC);
 	if (!entry)
 		goto out1;
 	entry->start = start;
-- 
1.8.5.6

