From: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Subject: s390/sclp: Add hmfai field
Patch-mainline: v4.7-rc1
Git-commit: 154fa27e6ba37931ca585598acf17c4dcd44c81a
References: FATE#324071, LTC#158956, bsc#1073059

Summary:     kernel: Transparent Facility Bit Handling
Description: When a guest is initializing, KVM provides facility bits that can
             be successfully used by the guest, by applying a mask to the
             bitfield returned by the STFLE instruction, so that only the
             facility bits actually supported by KVM are passed to the guest.
             
             Some facilities need support in the hypervisor in order to work,
             while others are handled by the system and do not need explicit
             support from the hypervisor.
             
             Until now the mask to select the bits to pass to the guest was
             maintained manually; this patchset allows KVM to pass to the guest
             all the facility bits that do not require hypervisor support.
             This allows new hardware features that do not need hypervisor
             support to be available for guests without having to patch the
             hypervisor every time.

Upstream-Description:

             s390/sclp: Add hmfai field

             Let's add hypervisor-managed facility-apportionment indications field to
             SCLP structs. KVM will use it to reduce maintenance cost of
             Non-Hypervisor-Managed facility bits.

             Signed-off-by: Alexander Yarygin <yarygin@linux.vnet.ibm.com>
             Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
             Reviewed-by: Eric Farman <farman@linux.vnet.ibm.com>
             Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>


Signed-off-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/include/asm/sclp.h   |    1 +
 drivers/s390/char/sclp_early.c |    6 +++++-
 2 files changed, 6 insertions(+), 1 deletion(-)

--- a/arch/s390/include/asm/sclp.h
+++ b/arch/s390/include/asm/sclp.h
@@ -67,6 +67,7 @@ struct sclp_info {
 	unsigned int max_cores;
 	unsigned long hsa_size;
 	unsigned long facilities;
+	unsigned int hmfai;
 };
 extern struct sclp_info sclp;
 
--- a/drivers/s390/char/sclp_early.c
+++ b/drivers/s390/char/sclp_early.c
@@ -45,7 +45,9 @@ struct read_info_sccb {
 	u64	rnmax2;			/* 104-111 */
 	u8	_pad_112[120 - 112];	/* 112-119 */
 	u16	hcpua;			/* 120-121 */
-	u8	_pad_122[4096 - 122];	/* 122-4095 */
+	u8	_pad_122[124 - 122];	/* 122-123 */
+	u32	hmfai;			/* 124-127 */
+	u8	_pad_128[4096 - 128];	/* 128-4095 */
 } __packed __aligned(PAGE_SIZE);
 
 static char sccb_early[PAGE_SIZE] __aligned(PAGE_SIZE) __initdata;
@@ -144,6 +146,8 @@ static void __init sclp_facilities_detec
 	sclp.mtid = (sccb->fac42 & 0x80) ? (sccb->fac42 & 31) : 0;
 	sclp.mtid_cp = (sccb->fac42 & 0x80) ? (sccb->fac43 & 31) : 0;
 	sclp.mtid_prev = (sccb->fac42 & 0x80) ? (sccb->fac66 & 31) : 0;
+
+	sclp.hmfai = sccb->hmfai;
 }
 
 /*
