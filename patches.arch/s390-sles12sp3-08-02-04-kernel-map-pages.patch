From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390/mm: always use PAGE_KERNEL when mapping pages
Patch-mainline: v4.8-rc1
Git-commit: 3e76ee99b095e5bee71165fda5edbe6b66b39700
References: FATE#324087, LTC#158827

Summary:     kernel: instruction execution protection
Description: Instruction execution protection is designed to enhance
             reliability and security. It prevents the execution of
             instructions in virtual memory locations that are not
             intended to contain instructions. 

Upstream-Description:

             s390/mm: always use PAGE_KERNEL when mapping pages

             Always use PAGE_KERNEL when re-enabling pages within the kernel
             mapping due to debug pagealloc. Without using this pgprot value
             pte_mkwrite() and pte_wrprotect() won't work on such mappings after an
             unmap -> map cycle anymore.

             Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/mm/pageattr.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/s390/mm/pageattr.c
+++ b/arch/s390/mm/pageattr.c
@@ -138,7 +138,7 @@ void __kernel_map_pages(struct page *pag
 		nr = min(numpages - i, nr);
 		if (enable) {
 			for (j = 0; j < nr; j++) {
-				pte_val(*pte) = __pa(address);
+				pte_val(*pte) = address | pgprot_val(PAGE_KERNEL);
 				address += PAGE_SIZE;
 				pte++;
 			}
