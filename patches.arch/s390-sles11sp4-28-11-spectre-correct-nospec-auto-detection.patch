From: Martin Schwidefsky <schwidefsky@de.ibm.com>
Subject: s390: correct nospec auto detection init order
Patch-mainline: v4.17-rc1
Git-commit: 6a3d1e81a434fc311f224b8be77258bafc18ccc6
References: bnc#1089386, LTC#166572

Description:  kernel: expoline defense against the spectre attack
Symptom:      None
Problem:      The spectre attack may be used to read restricted kernel
              data from user space.
Solution:     Provide execute trampolines for indirect branches
Reproduction: None

Upstream-Description:

              s390: correct nospec auto detection init order

              With CONFIG_EXPOLINE_AUTO=y the call of spectre_v2_auto_early() via
              early_initcall is done *after* the early_param functions. This
              overwrites any settings done with the nobp/no_spectre_v2/spectre_v2
              parameters. The code patching for the kernel is done after the
              evaluation of the early parameters but before the early_initcall
              is done. The end result is a kernel image that is patched correctly
              but the kernel modules are not.

              Make sure that the nospec auto detection function is called before the
              early parameters are evaluated and before the code patching is done.

              Fixes: 6e179d64126b ("s390: add automatic detection of the spectre defense")
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/include/asm/nospec-branch.h |    1 +
 arch/s390/kernel/nospec-branch.c      |    8 ++------
 arch/s390/kernel/setup.c              |    4 ++++
 3 files changed, 7 insertions(+), 6 deletions(-)

--- a/arch/s390/include/asm/nospec-branch.h
+++ b/arch/s390/include/asm/nospec-branch.h
@@ -9,6 +9,7 @@
 extern int nospec_disable;
 
 void nospec_init_branches(void);
+void nospec_auto_detect(void);
 void nospec_revert(s32 *start, s32 *end);
 
 #endif /* __ASSEMBLY__ */
--- a/arch/s390/kernel/nospec-branch.c
+++ b/arch/s390/kernel/nospec-branch.c
@@ -89,7 +89,7 @@ static int __init nospectre_v2_setup_ear
 }
 early_param("nospectre_v2", nospectre_v2_setup_early);
 
-static int __init spectre_v2_auto_early(void)
+void __init nospec_auto_detect(void)
 {
 #ifdef CC_USING_EXPOLINE
 	/*
@@ -104,11 +104,7 @@ static int __init spectre_v2_auto_early(
 	 * nobp setting decides what is done, this depends on the
 	 * CONFIG_KERNEL_NP option and the nobp/nospec parameters.
 	 */
-	return 0;
 }
-#ifdef CONFIG_EXPOLINE_AUTO
-early_initcall(spectre_v2_auto_early);
-#endif
 
 static int __init spectre_v2_setup_early(char *str)
 {
@@ -119,7 +115,7 @@ static int __init spectre_v2_setup_early
 	if (str && !strncmp(str, "off", 3))
 		nospec_disable = 1;
 	if (str && !strncmp(str, "auto", 4))
-		spectre_v2_auto_early();
+		nospec_auto_detect();
 	return 0;
 }
 early_param("spectre_v2", spectre_v2_setup_early);
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@ -1089,6 +1089,10 @@ setup_arch(char **cmdline_p)
 	else
 		memcpy(&uaccess, &uaccess_std, sizeof(uaccess));
 
+#if defined(CONFIG_EXPOLINE_AUTO)
+	nospec_auto_detect();
+#endif
+
 	parse_early_param();
 
 	os_info_init();
