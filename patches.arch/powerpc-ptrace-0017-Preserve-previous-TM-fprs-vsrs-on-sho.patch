From 51584b5ce945954a2c4fbf69d9c59b259be43c0c Mon Sep 17 00:00:00 2001
From: Dave Martin <Dave.Martin@arm.com>
Date: Thu, 5 Jan 2017 16:50:57 +0000
Subject: [PATCH] powerpc/ptrace: Preserve previous TM fprs/vsrs on short
 regset write

References: fate#318470,  [2017-01-30] Pending SUSE Kernel Fixes
Patch-mainline: v4.10-rc5
Git-commit: b34ca60148c53971d373643195cc5c4d5d20be78 (needs fixup for 000ec280e3dd ("powerpc: tm: Rename transct_(*) to ck(\1)_state"))

Ensure that if userspace supplies insufficient data to PTRACE_SETREGSET
to fill all the check pointed registers, the thread's old check pointed
registers are preserved.

Fixes: 9d3918f7c0e5 ("powerpc/ptrace: Enable support for NT_PPC_CVSX")
Fixes: 19cbcbf75a0c ("powerpc/ptrace: Enable support for NT_PPC_CFPR")
Cc: stable@vger.kernel.org # v4.8+
Signed-off-by: Dave Martin <Dave.Martin@arm.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Acked-by: Michal Suchanek <msuchanek@suse.de>
---
 arch/powerpc/kernel/ptrace.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/arch/powerpc/kernel/ptrace.c b/arch/powerpc/kernel/ptrace.c
index b25a15b..0dd2e79 100644
--- a/arch/powerpc/kernel/ptrace.c
+++ b/arch/powerpc/kernel/ptrace.c
@@ -1160,6 +1160,10 @@ static int tm_cfpr_set(struct task_struct *target,
 	flush_altivec_to_thread(target);
 	flush_tmregs_to_thread(target);
 
+	for (i = 0; i < 32; i++)
+		buf[i] = target->thread.TS_TRANS_FPR(i);
+	buf[32] = target->thread.transact_fp.fpscr;
+
 	/* copy to local buffer then write that out */
 	i = user_regset_copyin(&pos, &count, &kbuf, &ubuf, buf, 0, -1);
 	if (i)
@@ -1424,6 +1428,9 @@ static int tm_cvsx_set(struct task_struct *target,
 	flush_tmregs_to_thread(target);
 	flush_vsx_to_thread(target);
 
+	for (i = 0; i < 32 ; i++)
+		buf[i] = target->thread.transact_fp.fpr[i][TS_VSRLOWOFFSET];
+
 	ret = user_regset_copyin(&pos, &count, &kbuf, &ubuf,
 				 buf, 0, 32 * sizeof(double));
 	for (i = 0; i < 32 ; i++)
-- 
2.10.2

