From: Stefan Haberland <sth@linux.vnet.ibm.com>
Subject: s390/dasd: check if query host access feature is supported
Patch-mainline: v4.12-rc1
Git-commit: ccd53fa2261c2676258fe523d9201099f4d5ebc1
References: bnc#1038912, LTC#153591

Description:  dasd: Prevent error message when using query host access.
Symptom:      An error message occurs when using the query host access
              feature on storage servers that do not support it.
              This is implicitly done when using DASD tools like dasdfmt
              or fdasd on such a device.
Problem:      The error message is not clearly related to the query host
              access feature and looks like a generic DASD I/O error which
              might confuse customers.
Solution:     Check if the query host access feature is available on the
              storage server to not use it. This might not be
              sufficient for all cases. Suppress the error message for all
              remaining cases.
Reproduction: Read the host_access_count sysfs attribute for a storage
              server that does not support it.

Upstream-Description:

              s390/dasd: check if query host access feature is supported

              Some storage servers might not support the query host access feature.
              Check if the corresponding feature code is set.

              Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 drivers/s390/block/dasd_eckd.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@ -5155,6 +5155,10 @@ static int dasd_eckd_query_host_access(s
 	if (!device->block && private->lcu->pav == HYPER_PAV)
 		return -EOPNOTSUPP;
 
+	/* may not be supported by the storage server */
+	if (!(private->features.feature[14] & 0x80))
+		return -EOPNOTSUPP;
+
 	cqr = dasd_smalloc_request(DASD_ECKD_MAGIC, 1 /* PSF */	+ 1 /* RSSD */,
 				   sizeof(struct dasd_psf_prssd_data) + 1,
 				   device);
