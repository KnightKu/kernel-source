From: Will Deacon <will.deacon@arm.com>
Date: Mon, 5 Feb 2018 15:34:23 +0000
Subject: arm64: uaccess: Mask __user pointers for __arch_{clear, copy_*}_user
Git-commit: f71c2ffcb20dd8626880747557014bb9a61eb90e
Patch-mainline: v4.16-rc1
References: bsc#1068032

Like we've done for get_user and put_user, ensure that user pointers
are masked before invoking the underlying __arch_{clear,copy_*}_user
operations.

Signed-off-by: Will Deacon <will.deacon@arm.com>
Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
[mb: add __copy_to_user_inatomic and __copy_from_user_inatomic
in general we don't use raw_copy, so just leave the sames as they are]
Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---
 arch/arm64/include/asm/uaccess.h |   17 ++++++++++++-----
 arch/arm64/lib/clear_user.S      |    2 +-
 2 files changed, 13 insertions(+), 6 deletions(-)

--- a/arch/arm64/include/asm/uaccess.h
+++ b/arch/arm64/include/asm/uaccess.h
@@ -437,7 +437,7 @@ extern unsigned long __must_check __clea
 static inline unsigned long __must_check copy_from_user(void *to, const void __user *from, unsigned long n)
 {
 	if (access_ok(VERIFY_READ, from, n))
-		n = __copy_from_user(to, from, n);
+		n = __copy_from_user(to, __uaccess_mask_ptr(from), n);
 	else /* security hole - plug it */
 		memset(to, 0, n);
 	return n;
@@ -446,19 +446,26 @@ static inline unsigned long __must_check
 static inline unsigned long __must_check copy_to_user(void __user *to, const void *from, unsigned long n)
 {
 	if (access_ok(VERIFY_WRITE, to, n))
-		n = __copy_to_user(to, from, n);
+		n = __copy_to_user(__uaccess_mask_ptr(to), from, n);
 	return n;
 }
 
 static inline unsigned long __must_check copy_in_user(void __user *to, const void __user *from, unsigned long n)
 {
 	if (access_ok(VERIFY_READ, from, n) && access_ok(VERIFY_WRITE, to, n))
-		n = __copy_in_user(to, from, n);
+		n = __copy_in_user(__uaccess_mask_ptr(to), __uaccess_mask_ptr(from), n);
 	return n;
 }
 
-#define __copy_to_user_inatomic __copy_to_user
-#define __copy_from_user_inatomic __copy_from_user
+#define __copy_to_user_inatomic(to, from, n)	\
+({											\
+	__copy_to_user(__uaccess_mask_ptr(to), from, n);				\
+})
+
+#define __copy_from_user_inatomic(to, from, n)	\
+({											\
+	__copy_from_user(to, __uaccess_mask_ptr(from), n);				\
+})
 
 static inline unsigned long __must_check clear_user(void __user *to, unsigned long n)
 {
--- a/arch/arm64/lib/clear_user.S
+++ b/arch/arm64/lib/clear_user.S
@@ -21,7 +21,7 @@
 
 	.text
 
-/* Prototype: int __clear_user(void *addr, size_t sz)
+/* Prototype: int __arch_clear_user(void *addr, size_t sz)
  * Purpose  : clear some user memory
  * Params   : addr - user memory address to clear
  *          : sz   - number of bytes to clear
