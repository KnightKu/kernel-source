From: Janosch Frank <frankja@linux.vnet.ibm.com>
Subject: KVM: s390: Extend diag 204 fields
Patch-mainline: v4.8-rc1
Git-commit: a2d57b35c0226102b1f2ffdc2f719fcc30c99bf5
References: FATE#324070, LTC#158959

Summary:     kernel: Implement Store Hypervisor Information instruction in KVM
Description: Store Hypervisor Information is an emulated z/VM
             instruction that provides a guest with basic information about the
             layers it is running on. This includes information about the cpu
             configuration of both the machine and the lpar, as well as their
             names, machine model and machine type. This information enables an
             application to determine the maximum capacity of CPs and IFLs
             available to software.

Upstream-Description:

             KVM: s390: Extend diag 204 fields

             The new store hypervisor information instruction, which we are going
             to introduce, needs previously unused fields in diag 204 structures.

             Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>
             Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
             Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>


Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/include/asm/diag.h |   19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

--- a/arch/s390/include/asm/diag.h
+++ b/arch/s390/include/asm/diag.h
@@ -124,6 +124,11 @@ enum diag204_format {
 	DIAG204_INFO_EXT = 0x00010000
 };
 
+enum diag204_cpu_flags {
+	DIAG204_CPU_ONLINE = 0x20,
+	DIAG204_CPU_CAPPED = 0x40,
+};
+
 struct diag204_info_blk_hdr {
 	__u8  npar;
 	__u8  flags;
@@ -163,10 +168,13 @@ struct diag204_x_part_hdr {
 	__u64 online_cs;
 	__u64 online_es;
 	__u8  upid;
-	char  reserved1[3];
+	__u8  reserved:3;
+	__u8  mtid:5;
+	char  reserved1[2];
 	__u32 group_mlu;
 	char  group_name[8];
-	char  reserved2[32];
+	char  hardware_group_name[8];
+	char  reserved2[24];
 } __packed;
 
 struct diag204_cpu_info {
@@ -195,7 +203,9 @@ struct diag204_x_cpu_info {
 	__u64 wait_time;
 	__u32 pma_weight;
 	__u32 polar_weight;
-	char  reserved3[40];
+	__u32 cpu_type_cap;
+	__u32 group_cpu_type_cap;
+	char  reserved3[32];
 } __packed;
 
 struct diag204_phys_hdr {
@@ -226,7 +236,8 @@ struct diag204_x_phys_cpu {
 	__u16 cpu_addr;
 	char  reserved1[2];
 	__u8  ctidx;
-	char  reserved2[3];
+	char  reserved2[1];
+	__u16 weight;
 	__u64 mgm_time;
 	char  reserved3[80];
 } __packed;
