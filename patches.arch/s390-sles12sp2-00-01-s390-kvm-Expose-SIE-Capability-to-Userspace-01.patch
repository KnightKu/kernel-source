From: David Hildenbrand <dahi@linux.vnet.ibm.com>
Subject: s390/sclp: introduce check for SIE
Patch-mainline: v4.5-rc2
Git-commit: 8dfd523f8523779210038264259546299a8398e9
References: FATE#319575, LTC#131342

Summary:     s390/kvm: Expose SIE Capability to Userspace
Description: This feature enables user space to check for virtualization (SIE)
             support and prevents the kvm module from being loaded if SIE is
             not available. There are environments (e.g. within a KVM guest),
             where the SIE is not available. Trying to run a KVM guest on these
             systems will not result in any error message until now - for user
             space, it will simply look like the guest is not making any
             progress.

             Loading the KVM module will now fail under these environments and
             user space tools can check via /proc/cpuinfo (feature "sie") if
             virtualization is available.

Upstream-Description:

             s390/sclp: introduce check for SIE

             This patch adds a way to check if the SIE with zArchitecture support is
             available.

             Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
             Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>
             Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
             Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>


Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/include/asm/sclp.h   |    6 +++++-
 drivers/s390/char/sclp_early.c |    1 +
 2 files changed, 6 insertions(+), 1 deletion(-)

--- a/arch/s390/include/asm/sclp.h
+++ b/arch/s390/include/asm/sclp.h
@@ -29,7 +29,10 @@ struct sclp_ipl_info {
 
 struct sclp_core_entry {
 	u8 core_id;
-	u8 reserved0[2];
+	u8 reserved0;
+	u8 : 4;
+	u8 sief2 : 1;
+	u8 : 3;
 	u8 : 3;
 	u8 siif : 1;
 	u8 sigpif : 1;
@@ -53,6 +56,7 @@ struct sclp_info {
 	unsigned char has_sigpif : 1;
 	unsigned char has_core_type : 1;
 	unsigned char has_sprp : 1;
+	unsigned char has_sief2 : 1;
 	unsigned int ibc;
 	unsigned int mtid;
 	unsigned int mtid_cp;
--- a/drivers/s390/char/sclp_early.c
+++ b/drivers/s390/char/sclp_early.c
@@ -131,6 +131,7 @@ static void __init sclp_facilities_detec
 			continue;
 		sclp.has_siif = cpue->siif;
 		sclp.has_sigpif = cpue->sigpif;
+		sclp.has_sief2 = cpue->sief2;
 		break;
 	}
 
