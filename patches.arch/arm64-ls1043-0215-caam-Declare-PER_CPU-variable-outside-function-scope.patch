From ffdd91da7c1dce7d197ff2516d6f658c5eddd1d2 Mon Sep 17 00:00:00 2001
From: Alexander Graf <agraf@suse.de>
Date: Mon, 22 May 2017 14:01:54 +0200
Subject: [PATCH 215/221] caam: Declare PER_CPU variable outside function scope
Patch-mainline: No, upstream seems to not have that limitation
References: FATE#320030

When defining PER_CPU variables inside function scope, I get these nasty
errors from gcc:

 include/linux/percpu-defs.h:91:33: error: section attribute cannot be specified for local variables
   extern __PCPU_DUMMY_ATTRS char __pcpu_unique_##name;  \
                                 ^
 include/linux/percpu-defs.h:116:2: note: in expansion of macro 'DEFINE_PER_CPU_SECTION'
   DEFINE_PER_CPU_SECTION(type, name, "")
   ^~~~~~~~~~~~~~~~~~~~~~
 drivers/crypto/caam/qi.c:395:9: note: in expansion of macro 'DEFINE_PER_CPU'
   static DEFINE_PER_CPU(int, last_cpu);

There is no good reason to declare it only inside the function scope though.
Let's just move it a few lines above.

Signed-off-by: Alexander Graf <agraf@suse.de>

---
 drivers/crypto/caam/qi.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/crypto/caam/qi.c b/drivers/crypto/caam/qi.c
index 1990ed4..3951c4a 100644
--- a/drivers/crypto/caam/qi.c
+++ b/drivers/crypto/caam/qi.c
@@ -383,6 +383,7 @@ int caam_drv_ctx_update(struct caam_drv_ctx *drv_ctx, u32 *sh_desc)
 }
 EXPORT_SYMBOL(caam_drv_ctx_update);
 
+static DEFINE_PER_CPU(int, last_cpu);
 struct caam_drv_ctx *caam_drv_ctx_init(struct device *qidev,
 				       int *cpu,
 				       u32 *sh_desc)
@@ -392,7 +393,6 @@ struct caam_drv_ctx *caam_drv_ctx_init(struct device *qidev,
 	dma_addr_t hwdesc;
 	struct caam_drv_ctx *drv_ctx;
 	const cpumask_t *cpus = qman_affine_cpus();
-	static DEFINE_PER_CPU(int, last_cpu);
 
 	num_words = desc_len(sh_desc);
 	if (num_words > MAX_SDLEN) {
-- 
1.8.5.6

