From: jbeulich@suse.com
Subject: x86/AMD: fix making LFENCE a serializing instruction
Git-commit: e4d0e84e490790798691aaa0f2e598637f1867ec
Patch-mainline: v4.15-rc8
References: bsc#1068032 CVE-2017-5754

The MSR accessed does not exist on all families, and hence - as the
comment says - safe accessors need to be used.

--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@ -640,16 +640,19 @@ static void __cpuinit init_amd(struct cp
 		 * msr_set_bit() uses the safe accessors, too, even if the MSR
 		 * is not present.
 		 */
-		rdmsrl(MSR_F10H_DECFG, val);
-		val |= MSR_F10H_DECFG_LFENCE_SERIALIZE;
-		wrmsrl(MSR_F10H_DECFG, val);
+		ret = rdmsrl_safe(MSR_F10H_DECFG, &val);
+		if (!ret && !(val & MSR_F10H_DECFG_LFENCE_SERIALIZE)) {
+			val |= MSR_F10H_DECFG_LFENCE_SERIALIZE;
+			ret = wrmsrl_safe(MSR_F10H_DECFG, val);
+		}
 
 		/*
 		 * Verify that the MSR write was successful (could be running
 		 * under a hypervisor) and only then assume that LFENCE is
 		 * serializing.
 		 */
-		ret = rdmsrl_safe(MSR_F10H_DECFG, &val);
+		if (!ret)
+			ret = rdmsrl_safe(MSR_F10H_DECFG, &val);
 		if (!ret && (val & MSR_F10H_DECFG_LFENCE_SERIALIZE)) {
 			/* A serializing LFENCE stops RDTSC speculation */
 			set_cpu_cap(c, X86_FEATURE_LFENCE_RDTSC);
