From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci: query fmb length
Patch-mainline: v4.10-rc1
Git-commit: 0b7589ecca2b6f962cf3314a3a5a675deeefb624
References: bsc#1025483, FATE#321534, LTC#146540

Summary:     s390/pci: Add support to read PCI FMB length
Description: Query the length of the fmb and abort fmb
             registration if the size of the associated
             measurement block is too small.

Upstream-Description:

             s390/pci: query fmb length

             Query the length of the fmb and abort fmb registration if the
             size of the associated measurement block is too small.

             Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
             Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 arch/s390/include/asm/pci.h     |    1 +
 arch/s390/include/asm/pci_clp.h |    3 ++-
 arch/s390/pci/pci.c             |    2 +-
 arch/s390/pci/pci_clp.c         |    1 +
 4 files changed, 5 insertions(+), 2 deletions(-)

--- a/arch/s390/include/asm/pci.h
+++ b/arch/s390/include/asm/pci.h
@@ -132,6 +132,7 @@ struct zpci_dev {
 	/* Function measurement block */
 	struct zpci_fmb *fmb;
 	u16		fmb_update;	/* update interval */
+	u16		fmb_length;
 	/* software counters */
 	atomic64_t allocated_pages;
 	atomic64_t mapped_pages;
--- a/arch/s390/include/asm/pci_clp.h
+++ b/arch/s390/include/asm/pci_clp.h
@@ -96,7 +96,8 @@ struct clp_rsp_query_pci {
 	u16 pchid;
 	u32 bar[PCI_BAR_COUNT];
 	u8 pfip[CLP_PFIP_NR_SEGMENTS];	/* pci function internal path */
-	u32			: 24;
+	u32			: 16;
+	u8 fmb_len;
 	u8 pft;				/* pci function type */
 	u64 sdma;			/* start dma as */
 	u64 edma;			/* end dma as */
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -177,7 +177,7 @@ int zpci_fmb_enable_device(struct zpci_d
 {
 	struct mod_pci_args args = { 0, 0, 0, 0 };
 
-	if (zdev->fmb)
+	if (zdev->fmb || sizeof(*zdev->fmb) < zdev->fmb_length)
 		return -EINVAL;
 
 	zdev->fmb = kmem_cache_zalloc(zdev_fmb_cache, GFP_KERNEL);
--- a/arch/s390/pci/pci_clp.c
+++ b/arch/s390/pci/pci_clp.c
@@ -118,6 +118,7 @@ static int clp_store_query_pci_fn(struct
 	zdev->pft = response->pft;
 	zdev->vfn = response->vfn;
 	zdev->uid = response->uid;
+	zdev->fmb_length = sizeof(u32) * response->fmb_len;
 
 	memcpy(zdev->pfip, response->pfip, sizeof(zdev->pfip));
 	if (response->util_str_avail) {
