From: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Subject: s390/qeth: fix IP removal on offline cards
Patch-mainline: v4.16-rc5
Git-commit: 98d823ab1fbdcb13abc25b420f9bb71bade42056
References: bnc#1085507, LTC#165491

Description:  qeth: fix L3 IP address registration
Symptom:      Inconsistent driver-internal IP address table, which
              can lead to
              1. addresses being registered with the wrong features,
              2. addresses getting registered even though they are no
                 longer configured,
              3. addresses no longer getting registered even though
                 they are still configured.
Problem:      Matching queried addresses against current addresses in
              the internal IP address table does not consider the
              correct properties.
Solution:     Check the correct properties when querying the internal
              IP address table.
Reproduction: Configure & de-configure the same addresses as NORMAL,
              VIPA, RXIP. Or the same address as NORMAL, but with
              different subnet mask lengths.

Upstream-Description:

              s390/qeth: fix IP removal on offline cards

              If the HW is not reachable, then none of the IPs in qeth's internal
              table has been registered with the HW yet. So when deleting such an IP,
              there's no need to stage it for deregistration - just drop it from
              the table.

              This fixes the "add-delete-add" scenario on an offline card, where the
              the second "add" merely increments the IP's use count. But as the IP is
              still set to DISP_ADDR_DELETE from the previous "delete" step,
              l3_recover_ip() won't register it with the HW when the card goes online.

              Fixes: 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
              Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
              Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/net/qeth_l3_main.c |   14 +++-----------
 1 file changed, 3 insertions(+), 11 deletions(-)

--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@ -259,12 +259,8 @@ int qeth_l3_delete_ip(struct qeth_card *
 	if (addr->in_progress)
 		return -EINPROGRESS;
 
-	if (!qeth_card_hw_is_reachable(card)) {
-		addr->disp_flag = QETH_DISP_ADDR_DELETE;
-		return 0;
-	}
-
-	rc = qeth_l3_deregister_addr_entry(card, addr);
+	if (qeth_card_hw_is_reachable(card))
+		rc = qeth_l3_deregister_addr_entry(card, addr);
 
 	hash_del(&addr->hnode);
 	kfree(addr);
@@ -406,11 +402,7 @@ static void qeth_l3_recover_ip(struct qe
 	spin_lock_bh(&card->ip_lock);
 
 	hash_for_each_safe(card->ip_htable, i, tmp, addr, hnode) {
-		if (addr->disp_flag == QETH_DISP_ADDR_DELETE) {
-			qeth_l3_deregister_addr_entry(card, addr);
-			hash_del(&addr->hnode);
-			kfree(addr);
-		} else if (addr->disp_flag == QETH_DISP_ADDR_ADD) {
+		if (addr->disp_flag == QETH_DISP_ADDR_ADD) {
 			if (addr->proto == QETH_PROT_IPV4) {
 				addr->in_progress = 1;
 				spin_unlock_bh(&card->ip_lock);
