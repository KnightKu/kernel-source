From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: PCI: fix hotplug related issues
Patch-mainline: no
Git-commit: n/a
References: bnc#1054247, LTC#157731

Description:  PCI: fix hotplug related issues
Symptom:      After serveral cycles of hot-unplug/hotplug the affected
              function stops working or the kernel oopses.
Problem:      Hotplug notifications happen after the fact, meaning it's
              not possible to issue instructions to the function for
              cleanup purposes. Thus we never release the associated
              resources and at some point fail to allocate new ones.
Solution:     During clean up treat some errors as success (e.g. a
              function that's gone can't create an interrupt).
Reproduction: vmcp att pcif XXX to \* ;vmcp det pcif XXX #in a loop

Upstream-Description:

              For kernels not supporting GENERIC_HARDIRQS we waste 2K MSIs per
              function. Since the MSI data field is only 16 bit, we reach the
              maximum of 64K MSIs with only 32 functions, although we claim to
              support 64 functions.

              With this patch we only waste 1K MSIs per function to actually
              support 64 functions.

              [not applicable upstream, SLES 11 SP4 only, we support
              GENERIC_HARDIRQS since Kernel 3.12]


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: Hannes Reinecke <hare@suse.com>
---
 arch/s390/include/asm/pci.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/s390/include/asm/pci.h
+++ b/arch/s390/include/asm/pci.h
@@ -59,7 +59,7 @@ struct msi_map {
 	struct hlist_node msi_chain;
 };
 
-#define ZPCI_MSI_VEC_BITS	11
+#define ZPCI_MSI_VEC_BITS	10
 #define ZPCI_MSI_VEC_MAX	(1 << ZPCI_MSI_VEC_BITS)
 #define ZPCI_MSI_VEC_MASK	(ZPCI_MSI_VEC_MAX - 1)
 
