From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/cio: collect format 1 channel-path description data
Patch-mainline: v3.10-rc1
Git-commit: cce0eacc225b402824e2fc72936b3796e7659fc6
References: bnc#958000, LTC#136434

Description:  s390/cio: update measurement characteristics
Symptom:      lschp shows stale information in the "Cmg" and "Shared"
              column.
Problem:      Measurement characteristics are read only during IPL
              and are not updated when capabilities of a chpid change.
Solution:     Keep measurement characteristics up to date.
Reproduction: chchp -c 1 <chpid> ; lschp

Upstream-Description:

              s390/cio: collect format 1 channel-path description data

              Collect format 1 channel-path description data for each CHPID
              and update the information in one place.

              Reviewed-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
              Signed-off-by: Peter Oberparleiter <peter.oberparleiter@de.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 drivers/s390/cio/chp.c  |   22 +++++++++++++++++++++-
 drivers/s390/cio/chp.h  |    2 ++
 drivers/s390/cio/chsc.c |   11 ++++++-----
 drivers/s390/cio/css.c  |    5 ++---
 4 files changed, 31 insertions(+), 9 deletions(-)

--- a/drivers/s390/cio/chp.c
+++ b/drivers/s390/cio/chp.c
@@ -374,6 +374,26 @@ static void chp_release(struct device *d
 }
 
 /**
+ * chp_update_desc - update channel-path description
+ * @chp - channel-path
+ *
+ * Update the channel-path description of the specified channel-path.
+ * Return zero on success, non-zero otherwise.
+ */
+int chp_update_desc(struct channel_path *chp)
+{
+	int rc;
+
+	rc = chsc_determine_base_channel_path_desc(chp->chpid, &chp->desc);
+	if (rc)
+		return rc;
+
+	rc = chsc_determine_fmt1_channel_path_desc(chp->chpid, &chp->desc_fmt1);
+
+	return rc;
+}
+
+/**
  * chp_new - register a new channel-path
  * @chpid - channel-path ID
  *
@@ -399,7 +419,7 @@ int chp_new(struct chp_id chpid)
 	mutex_init(&chp->lock);
 
 	/* Obtain channel path description and fill it in. */
-	ret = chsc_determine_base_channel_path_desc(chpid, &chp->desc);
+	ret = chp_update_desc(chp);
 	if (ret)
 		goto out_free;
 	if ((chp->desc.flags & 0x80) == 0) {
--- a/drivers/s390/cio/chp.h
+++ b/drivers/s390/cio/chp.h
@@ -46,6 +46,7 @@ struct channel_path {
 	struct mutex lock; /* Serialize access to below members. */
 	int state;
 	struct channel_path_desc desc;
+	struct channel_path_desc_fmt1 desc_fmt1;
 	/* Channel-measurement related stuff: */
 	int cmg;
 	int shared;
@@ -64,6 +65,7 @@ int chp_is_registered(struct chp_id chpi
 void *chp_get_chp_desc(struct chp_id chpid);
 void chp_remove_cmg_attr(struct channel_path *chp);
 int chp_add_cmg_attr(struct channel_path *chp);
+int chp_update_desc(struct channel_path *chp);
 int chp_new(struct chp_id chpid);
 void chp_cfg_schedule(struct chp_id chpid, int configure);
 void chp_cfg_cancel_deconfigure(struct chp_id chpid);
--- a/drivers/s390/cio/chsc.c
+++ b/drivers/s390/cio/chsc.c
@@ -357,7 +357,7 @@ static void chsc_process_sei_chp_avail(s
 			continue;
 		}
 		mutex_lock(&chp->lock);
-		chsc_determine_base_channel_path_desc(chpid, &chp->desc);
+		chp_update_desc(chp);
 		mutex_unlock(&chp->lock);
 	}
 }
@@ -586,8 +586,8 @@ int chsc_chp_vary(struct chp_id chpid, i
 	 * Redo PathVerification on the devices the chpid connects to
 	 */
 	if (on) {
-		/* Try to update the channel path descritor. */
-		chsc_determine_base_channel_path_desc(chpid, &chp->desc);
+		/* Try to update the channel path description. */
+		chp_update_desc(chp);
 		for_each_subchannel_staged(s390_subchannel_vary_chpid_on,
 					   NULL, &link);
 		css_schedule_reprobe();
@@ -781,9 +781,10 @@ int chsc_determine_fmt1_channel_path_des
 {
 	struct chsc_response_struct *chsc_resp;
 	struct chsc_scpd *scpd_area;
+	unsigned long flags;
 	int ret;
 
-	spin_lock_irq(&chsc_page_lock);
+	spin_lock_irqsave(&chsc_page_lock, flags);
 	scpd_area = chsc_page;
 	ret = chsc_determine_channel_path_desc(chpid, 0, 0, 1, 0, scpd_area);
 	if (ret)
@@ -791,7 +792,7 @@ int chsc_determine_fmt1_channel_path_des
 	chsc_resp = (void *)&scpd_area->response;
 	memcpy(desc, &chsc_resp->data, sizeof(*desc));
 out:
-	spin_unlock_irq(&chsc_page_lock);
+	spin_unlock_irqrestore(&chsc_page_lock, flags);
 	return ret;
 }
 
--- a/drivers/s390/cio/css.c
+++ b/drivers/s390/cio/css.c
@@ -1079,9 +1079,8 @@ void channel_subsystem_reinit(void)
 	chsc_enable_facility(CHSC_SDA_OC_MSS);
 	chp_id_for_each(&chpid) {
 		chp = chpid_to_chp(chpid);
-		if (!chp)
-			continue;
-		chsc_determine_base_channel_path_desc(chpid, &chp->desc);
+		if (chp)
+			chp_update_desc(chp);
 	}
 }
 
