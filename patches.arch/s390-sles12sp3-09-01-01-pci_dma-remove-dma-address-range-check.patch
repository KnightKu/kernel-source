From: Sebastian Ott <sebott@linux.vnet.ibm.com>
Subject: s390/pci_dma: remove dma address range check
Patch-mainline: v4.9-rc1
Git-commit: 3b13f1fea1be44f29be4150246624502a0227ebd
References: bnc#1079886, LTC#163393

Description:  s390/pci: improve lazy IOTLB flushing mode
Symptom:      Some PCI workloads don't reach full
              performance potential.
Problem:      Even with lazy IOTLB flushing it is done
              more often than needed.
Solution:     Improve that and be as lazy as possible.
Reproduction: -

Upstream-Description:

              s390/pci_dma: remove dma address range check

              We calculate dma addresses using an iommu bitmap. Since commit
              69eea95c ("s390/pci_dma: fix DMA table corruption with > 4 TB main memory")
              we've made sure that addresses created using that bitmap are below
              the maximum reported by firmware. Thus the additional check for
              that address to be within range can be removed.

              Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
              Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>


Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 arch/s390/pci/pci_dma.c |    5 -----
 1 file changed, 5 deletions(-)

--- a/arch/s390/pci/pci_dma.c
+++ b/arch/s390/pci/pci_dma.c
@@ -304,12 +304,7 @@ static dma_addr_t s390_dma_map_pages(str
 
 	/* Use rounded up size */
 	size = nr_pages * PAGE_SIZE;
-
 	dma_addr = zdev->start_dma + iommu_page_index * PAGE_SIZE;
-	if (dma_addr + size > zdev->end_dma) {
-		ret = -ERANGE;
-		goto out_free;
-	}
 
 	if (direction == DMA_NONE || direction == DMA_TO_DEVICE)
 		flags |= ZPCI_TABLE_PROTECTED;
