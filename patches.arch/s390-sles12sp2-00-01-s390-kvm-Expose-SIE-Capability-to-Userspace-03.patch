From: David Hildenbrand <dahi@linux.vnet.ibm.com>
Subject: KVM: s390: don't load kvm without virtualization support
Patch-mainline: v4.5-rc2
Git-commit: 07197fd05fa3eb2e8a5aae92938ca5d07bcac9fc
References: FATE#319575, LTC#131342

Summary:     s390/kvm: Expose SIE Capability to Userspace
Description: This feature enables user space to check for virtualization (SIE)
             support and prevents the kvm module from being loaded if SIE is
             not available. There are environments (e.g. within a KVM guest),
             where the SIE is not available. Trying to run a KVM guest on these
             systems will not result in any error message until now - for user
             space, it will simply look like the guest is not making any
             progress.

             Loading the KVM module will now fail under these environments and
             user space tools can check via /proc/cpuinfo (feature "sie") if
             virtualization is available.

Upstream-Description:

             KVM: s390: don't load kvm without virtualization support

             If we don't have support for virtualization (SIE), e.g. when running under
             a hypervisor not supporting execution of the SIE instruction, we should
             immediately abort loading the kvm module, as the SIE instruction cannot
             be enabled dynamically.

             Currently, the SIE instructions fails with an exception on a non-SIE
             host, resulting in the guest making no progress, instead of failing hard.

             Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
             Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
             Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
             Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>


Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.de>
---
 arch/s390/kvm/kvm-s390.c |    5 +++++
 1 file changed, 5 insertions(+)

--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@ -2767,6 +2767,11 @@ void kvm_arch_commit_memory_region(struc
 
 static int __init kvm_s390_init(void)
 {
+	if (!sclp.has_sief2) {
+		pr_info("SIE not available\n");
+		return -ENODEV;
+	}
+
 	return kvm_init(NULL, sizeof(struct kvm_vcpu), 0, THIS_MODULE);
 }
 
