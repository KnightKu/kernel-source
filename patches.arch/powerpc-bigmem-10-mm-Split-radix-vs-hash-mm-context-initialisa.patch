From e44f39ce43afdf809b7994f71659b1807c8b809d Mon Sep 17 00:00:00 2001
From: Michael Ellerman <mpe@ellerman.id.au>
Date: Thu, 30 Mar 2017 23:03:57 +1100
Subject: [PATCH] powerpc/mm: Split radix vs hash mm context initialisation

References: bsc#1027457, fate#322470
Patch-mainline: v4.12-rc1
Git-commit: 760573c1a98cce20b9306f3922d460e58b4ba656

Complete the split of the radix vs hash mm context initialisation.

This is mostly code movement, with the exception that we now limit the
context allocation to PRTB_ENTRIES - 1 on radix.

Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Signed-off-by: Rick Lindsley <ricklind@us.ibm.com>
Acked-by: Michal Suchanek <msuchanek@suse.de>
---
 arch/powerpc/mm/mmu_context_hash64.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/arch/powerpc/mm/mmu_context_hash64.c b/arch/powerpc/mm/mmu_context_hash64.c
index 345bcc1..e6f4276 100644
--- a/arch/powerpc/mm/mmu_context_hash64.c
+++ b/arch/powerpc/mm/mmu_context_hash64.c
@@ -63,7 +63,7 @@ int hash__alloc_context_id(void)
 }
 EXPORT_SYMBOL_GPL(hash__alloc_context_id);
 
-int init_new_context(struct task_struct *tsk, struct mm_struct *mm)
+static int hash__init_new_context(struct mm_struct *mm)
 {
 	int index;
 
@@ -77,8 +77,22 @@ int init_new_context(struct task_struct *tsk, struct mm_struct *mm)
 	 */
 	if (slice_mm_new_context(mm))
 		slice_set_user_psize(mm, mmu_virtual_psize);
+
 	subpage_prot_init_new_context(mm);
+
+	return index;
+}
+
+int init_new_context(struct task_struct *tsk, struct mm_struct *mm)
+{
+	int index;
+
+	index = hash__init_new_context(mm);
+	if (index < 0)
+		return index;
+
 	mm->context.id = index;
+
 #ifdef CONFIG_PPC_ICSWX
 	mm->context.cop_lockp = kmalloc(sizeof(spinlock_t), GFP_KERNEL);
 	if (!mm->context.cop_lockp) {
-- 
2.10.2

