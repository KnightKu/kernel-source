From: Stefan Haberland <sth@linux.vnet.ibm.com>
Subject: s390/dasd: allow 0 for path_threshold attribute
Patch-mainline: v4.11-rc1
Git-commit: defc2a9b9899511445cfbaa2c3a6509964b71207
References: bnc#1038912, LTC#153770

Description:  dasd: Allow to disable IFCC/CCC error handling
Symptom:      The interface control check(IFCC)/channel control check(CCC)
              handling can not be deactivated by writing 0 to the 
              path_threshold sysfs attribute.
Problem:      The value 0 is treated as invalid.
Solution:     Allow the value 0 for the sysfs attribute.
Reproduction: Try to echo 0 into the path_threshold sysfs attribute on
              a DASD device.

Upstream-Description:

              s390/dasd: allow 0 for path_threshold attribute

              Allow 0 as valid input for the path_threshold attribute to deactivate
              the IFCC/CCC error handling.

              Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 drivers/s390/block/dasd_devmap.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

--- a/drivers/s390/block/dasd_devmap.c
+++ b/drivers/s390/block/dasd_devmap.c
@@ -1558,14 +1558,12 @@ dasd_path_threshold_store(struct device
 	if (IS_ERR(device))
 		return -ENODEV;
 
-	if ((kstrtoul(buf, 10, &val) != 0) ||
-	    (val > DASD_THRHLD_MAX) || val == 0) {
+	if (kstrtoul(buf, 10, &val) != 0 || val > DASD_THRHLD_MAX) {
 		dasd_put_device(device);
 		return -EINVAL;
 	}
 	spin_lock_irqsave(get_ccwdev_lock(to_ccwdev(dev)), flags);
-	if (val)
-		device->path_thrhld = val;
+	device->path_thrhld = val;
 	spin_unlock_irqrestore(get_ccwdev_lock(to_ccwdev(dev)), flags);
 	dasd_put_device(device);
 	return count;
