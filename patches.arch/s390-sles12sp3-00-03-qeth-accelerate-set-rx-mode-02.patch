From: Ursula Braun <ubraun@linux.vnet.ibm.com>
Subject: s390/qeth: fix setting VIPA address
Patch-mainline: v4.8-rc8
Git-commit: 732a59cb6e7faed7a40da6665a517945c95fc895
References: bsc#1025380, FATE#321529, LTC#146544

Summary:     qeth: optimize IP handling in rx_mode callback
Description: In layer3 mode of the qeth driver, multicast IP addresses
             from struct net_device and other type of IP addresses
             from other sources require mapping to the OSA-card.
             The IP address mapping logic is simplified, and the
             implementation of ndo_set_rx_mode callback and ip notifier events
             is changed. Addresses are stored in private hashtables instead of
             lists now. It allows hardware registration/removal for new/deleted
             multicast addresses only.

Upstream-Description:

             s390/qeth: fix setting VIPA address

             commit 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
             restructured the internal address handling.
             This work broke setting a virtual IP address.
             The command
             echo 10.1.1.1 > /sys/bus/ccwgroup/devices/<device>/vipa/add4
             fails with file exist error even if the IP address has not
             been set before.

             It turned out that the search result for the IP address
             search is handled incorrectly in the VIPA case.

             This patch fixes the setting of an virtual IP address.

             Signed-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
             Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
             Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
Acked-by: John Jolly <jjolly@suse.com>
---
 drivers/s390/net/qeth_l3_main.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@ -689,7 +689,7 @@ int qeth_l3_add_vipa(struct qeth_card *c
 
 	spin_lock_bh(&card->ip_lock);
 
-	if (!qeth_l3_ip_from_hash(card, ipaddr))
+	if (qeth_l3_ip_from_hash(card, ipaddr))
 		rc = -EEXIST;
 	else
 		qeth_l3_add_ip(card, ipaddr);
@@ -757,7 +757,7 @@ int qeth_l3_add_rxip(struct qeth_card *c
 
 	spin_lock_bh(&card->ip_lock);
 
-	if (!qeth_l3_ip_from_hash(card, ipaddr))
+	if (qeth_l3_ip_from_hash(card, ipaddr))
 		rc = -EEXIST;
 	else
 		qeth_l3_add_ip(card, ipaddr);
