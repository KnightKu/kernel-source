From: Hannes Reinecke <hare@suse.de>
Date: Thu, 16 Jan 2014 11:43:38 +0100
Subject: megaraid_sas: boot hangs while LD is offline
Patch-mainline: not yet, will be pushed by LSI
References: bnc#698102

Offline Logical drive(LD) should not be allowed to be visible
to Operating system.  At module load time, driver calls
scsi_host_scan(), where driver needs to skip offline LDs as it
already does for non-system Physical drives(PDs).

Cc: Sumit Saxena <Sumit.Saxena@lsi.com>
Cc: Adam Radford <aradford@gmail.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/megaraid/megaraid_sas_base.c | 27 +++++++++++++++++----------
 1 file changed, 17 insertions(+), 10 deletions(-)

diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c
index 6b4c4b7..8bf38b3 100644
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@ -1585,7 +1585,7 @@ static struct megasas_instance *megasas_lookup_instance(u16 host_no)
 
 static int megasas_slave_configure(struct scsi_device *sdev)
 {
-	u16             pd_index = 0;
+	u16 pd_index = 0, ld_index = 0;
 	struct  megasas_instance *instance ;
 
 	instance = megasas_lookup_instance(sdev->host->host_no);
@@ -1597,17 +1597,24 @@ static int megasas_slave_configure(struct scsi_device *sdev)
 	*        That will be fixed once LSI engineers have audited the
 	*        firmware for possible issues.
 	*/
-	if (sdev->channel < MEGASAS_MAX_PD_CHANNELS &&
-				sdev->type == TYPE_DISK) {
+	/*
+	 * Skip for LD offline and PD which are not configured as
+	 * system pd.
+	 */
+	if (sdev->channel < MEGASAS_MAX_PD_CHANNELS) {
+		if (sdev->type != TYPE_DISK)
+			return -ENXIO;
+
 		pd_index = (sdev->channel * MEGASAS_MAX_DEV_PER_CHANNEL) +
 								sdev->id;
-		if (instance->pd_list[pd_index].driveState ==
-						MR_PD_STATE_SYSTEM) {
-			blk_queue_rq_timeout(sdev->request_queue,
-				MEGASAS_DEFAULT_CMD_TIMEOUT * HZ);
-			return 0;
-		}
-		return -ENXIO;
+		if (instance->pd_list[pd_index].driveState !=
+						MR_PD_STATE_SYSTEM)
+			return -ENXIO;
+	} else {
+		ld_index = ((sdev->channel - MEGASAS_MAX_PD_CHANNELS) *
+			    MEGASAS_MAX_DEV_PER_CHANNEL) + sdev->id;
+		if (instance->ld_ids[ld_index] == 0xFF)
+			return -ENXIO;
 	}
 
 	/*
-- 
1.7.12.4

