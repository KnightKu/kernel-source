From ea76501fd46ef143fa20eeddf10d875e8906504c Mon Sep 17 00:00:00 2001
From: Robert Richter <rrichter@cavium.com>
Date: Wed, 12 Apr 2017 10:31:15 +0200
Subject: [PATCH 21/22] iommu/arm-smmu, ACPI: Enable Cavium SMMU-v3

Patch-mainline: Never, Update after IORT spec release
References: bsc#1035000

In next IORT spec release there will be a definition of a Cavium
specific model. Until then, enable the Cavium SMMU using cpu id
registers. Early silicon versions (A1) of Cavium's CN99xx SMMUv3
implementation must be enabled. For later silicon versions (B0) the
iort change will be in place.

Signed-off-by: Robert Richter <rrichter@cavium.com>
Signed-off-by: Mian Yousaf Kaukab <yousaf.kaukab@suse.com>
---
 drivers/iommu/arm-smmu-v3.c | 24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c
index f0f45d6438b2..f562a587a370 100644
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@ -39,6 +39,8 @@
 
 #include <linux/amba/bus.h>
 
+#include <asm/cputype.h>
+
 #include "io-pgtable.h"
 
 /* MMIO registers */
@@ -2631,6 +2633,24 @@ static int arm_smmu_device_hw_probe(struct arm_smmu_device *smmu)
 }
 
 #ifdef CONFIG_ACPI
+
+static int acpi_smmu_enable_cavium(struct arm_smmu_device *smmu, int ret)
+{
+	u32 cpu_model;
+
+	if (!IS_ENABLED(CONFIG_ARM64))
+		return ret;
+
+	cpu_model = read_cpuid_id() & MIDR_CPU_MODEL_MASK;
+	if (cpu_model != 0x420f5160)
+		return ret;
+
+	smmu->options |= (ARM_SMMU_OPT_PAGE0_REGS_ONLY |
+			ARM_SMMU_OPT_USE_SHARED_IRQS);
+
+	return 0;
+}
+
 static int acpi_smmu_get_options(u32 model, struct arm_smmu_device *smmu)
 {
 	int ret = 0;
@@ -2650,7 +2670,7 @@ static int acpi_smmu_get_options(u32 model, struct arm_smmu_device *smmu)
 		ret = -ENODEV;
 	}
 
-	return ret;
+	return acpi_smmu_enable_cavium(smmu, ret);
 }
 
 static int arm_smmu_device_acpi_probe(struct platform_device *pdev,
@@ -2670,6 +2690,8 @@ static int arm_smmu_device_acpi_probe(struct platform_device *pdev,
 	if (ret < 0)
 		return ret;
 
+	dev_notice(smmu->dev, "option mask 0x%x\n", smmu->options);
+
 	if (iort_smmu->flags & ACPI_IORT_SMMU_V3_COHACC_OVERRIDE)
 		smmu->features |= ARM_SMMU_FEAT_COHERENCY;
 
-- 
2.11.0

