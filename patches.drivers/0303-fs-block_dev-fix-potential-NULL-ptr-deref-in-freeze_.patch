From: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date: Tue, 23 Aug 2016 18:55:31 +0300
Subject: fs/block_dev: fix potential NULL ptr deref in freeze_bdev()
References: bsc#1020989,FATE#322379
Git-commit: 5bb53c0fb8e0fc2e34287d5d0fcadc784de913e1
Patch-Mainline: v4.8-rc4

Calling freeze_bdev() twice on the same block device without mounted
filesystem get_super() will return NULL, which will lead to NULL-ptr
dereference later in drop_super().

Check get_super() result to fix that.

Note, that this is a purely theoretical issue. We have only 3
freeze_bdev() callers. 2 of them are in filesystem code and used on a
device with mounted fs. The third one in lock_fs() has protection in
upper-layer code against freezing block device the second time without
thawing it first.

Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Jens Axboe <axboe@fb.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 fs/block_dev.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/fs/block_dev.c b/fs/block_dev.c
index f19fac1..4720f6a 100644
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@ -257,7 +257,8 @@ struct super_block *freeze_bdev(struct block_device *bdev)
 		 * thaw_bdev drops it.
 		 */
 		sb = get_super(bdev);
-		drop_super(sb);
+		if (sb)
+			drop_super(sb);
 		mutex_unlock(&bdev->bd_fsfreeze_mutex);
 		return sb;
 	}
-- 
1.8.5.6

