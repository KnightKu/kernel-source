From: Omar Sandoval <osandov@fb.com>
Date: Tue, 28 Mar 2017 16:12:17 -0700
Subject: block: fix leak of q->rq_wb
Git-commit: 02ba8893ac9aa34fcb4ce2a9baef5615b190335a
Patch-Mainline: v4.12
References: bsc#1040073

CONFIG_DEBUG_TEST_DRIVER_REMOVE found a possible leak of q->rq_wb when a
request queue is reregistered. This has been a problem since wbt was
introduced, but the WARN_ON(!list_empty(&stats->callbacks)) in the
blk-stat rework exposed it. Fix it by cleaning up wbt when we unregister
the queue.

Fixes: 87760e5eef35 ("block: hook up writeback throttling")
Signed-off-by: Omar Sandoval <osandov@fb.com>
Signed-off-by: Jens Axboe <axboe@fb.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 block/blk-sysfs.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 8a1f771..14e73fee 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -798,7 +798,6 @@ static void blk_release_queue(struct kobject *kobj)
 	struct request_queue *q =
 		container_of(kobj, struct request_queue, kobj);
 
-	wbt_exit(q);
 	bdi_put(q->backing_dev_info);
 	blkcg_exit_queue(q);
 
@@ -919,6 +918,8 @@ void blk_unregister_queue(struct gendisk *disk)
 	if (WARN_ON(!q))
 		return;
 
+	wbt_exit(q);
+
 	if (q->mq_ops)
 		blk_mq_unregister_dev(disk_to_dev(disk), q);
 
-- 
1.8.5.6

