From f3acdcdbbc468898db29c374d442216f99b9e38b Mon Sep 17 00:00:00 2001
From: "Lendacky, Thomas" <Thomas.Lendacky@amd.com>
Date: Thu, 10 Nov 2016 17:10:46 -0600
Subject: [PATCH] net: phy: expose phy_aneg_done API for use by drivers
Git-commit: 372788f964c95a6fa0f677c43d6153c27896ef42
Patch-mainline: v4.10-rc1
References: bsc#1040392

Make phy_aneg_done() available to drivers so that the result of the
auto-negotiation initiated by phy_start_aneg() can be determined.

Remove the local implementation of phy_aneg_done() from the Aeroflex
driver and use the phy library version.

Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Alexander Graf <agraf@suse.de>
---
 drivers/net/ethernet/aeroflex/greth.c |    9 ---------
 drivers/net/phy/phy.c                 |    3 ++-
 include/linux/phy.h                   |    1 +
 3 files changed, 3 insertions(+), 10 deletions(-)

--- a/drivers/net/ethernet/aeroflex/greth.c
+++ b/drivers/net/ethernet/aeroflex/greth.c
@@ -1312,15 +1312,6 @@ static int greth_mdio_probe(struct net_d
 	return 0;
 }
 
-static inline int phy_aneg_done(struct phy_device *phydev)
-{
-	int retval;
-
-	retval = phy_read(phydev, MII_BMSR);
-
-	return (retval < 0) ? retval : (retval & BMSR_ANEGCOMPLETE);
-}
-
 static int greth_mdio_init(struct greth_private *greth)
 {
 	int ret, phy;
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -143,7 +143,7 @@ static int phy_config_interrupt(struct p
  * Returns > 0 on success or < 0 on error. 0 means that auto-negotiation
  * is still pending.
  */
-static inline int phy_aneg_done(struct phy_device *phydev)
+int phy_aneg_done(struct phy_device *phydev)
 {
 	if (phydev->drv->aneg_done)
 		return phydev->drv->aneg_done(phydev);
@@ -156,6 +156,7 @@ static inline int phy_aneg_done(struct p
 
 	return genphy_aneg_done(phydev);
 }
+EXPORT_SYMBOL(phy_aneg_done);
 
 /* A structure for mapping a particular speed and duplex
  * combination to a particular SUPPORTED and ADVERTISED value
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -772,6 +772,7 @@ void phy_detach(struct phy_device *phyde
 void phy_start(struct phy_device *phydev);
 void phy_stop(struct phy_device *phydev);
 int phy_start_aneg(struct phy_device *phydev);
+int phy_aneg_done(struct phy_device *phydev);
 
 int phy_stop_interrupts(struct phy_device *phydev);
 
