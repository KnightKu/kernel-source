From b39eb9085fbc6fadb00c9188518df2c699d078bd Mon Sep 17 00:00:00 2001
From: Fabian Frederick <fabf@skynet.be>
Date: Sun, 4 Dec 2016 10:48:58 -0800
Subject: libnvdimm, namespace: avoid multiple sector calculations
Git-commit: 0a3f27b9a6a8f76f1df270e1a18b096f8f5d5dbc
Patch-mainline: v4.10-rc1
References: FATE#321135, FATE#321217, FATE#321256, FATE#321391, FATE#321393

Use sector_t for cleared

Suggested-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Fabian Frederick <fabf@skynet.be>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>

---
 drivers/nvdimm/pmem.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/nvdimm/pmem.c b/drivers/nvdimm/pmem.c
index 02502d9..bf99afc 100644
--- a/drivers/nvdimm/pmem.c
+++ b/drivers/nvdimm/pmem.c
@@ -51,17 +51,16 @@ static int pmem_clear_poison(struct pmem_device *pmem, phys_addr_t offset,
 		unsigned int len)
 {
 	struct device *dev = to_dev(pmem);
-	sector_t sector;
-	long cleared;
+	sector_t sector, cleared;
 
 	sector = (offset - pmem->data_offset) / 512;
-	cleared = nvdimm_clear_poison(dev, pmem->phys_addr + offset, len);
+	cleared = nvdimm_clear_poison(dev, pmem->phys_addr + offset, len) / 512;
 
-	if (cleared > 0 && cleared / 512) {
+	if (cleared) {
 		dev_dbg(dev, "%s: %#llx clear %ld sector%s\n",
 				__func__, (unsigned long long) sector,
-				cleared / 512, cleared / 512 > 1 ? "s" : "");
-		badblocks_clear(&pmem->bb, sector, cleared / 512);
+				cleared, cleared > 1 ? "s" : "");
+		badblocks_clear(&pmem->bb, sector, cleared);
 	} else {
 		return -EIO;
 	}
-- 
1.8.5.6

