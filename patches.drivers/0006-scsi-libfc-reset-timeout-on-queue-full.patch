From 5f47722a47ef980dfb4c45319ad17831286f526b Mon Sep 17 00:00:00 2001
From: Hannes Reinecke <hare@suse.de>
Date: Thu, 13 Oct 2016 15:10:53 +0200
Subject: scsi: libfc: reset timeout on queue full
Git-commit: ad3120cfe0c5dcd5aaa87a0f7c42d4b09a94fa12
Patch-mainline: v4.10-rc1
Git-commit: 5f47722a47ef980dfb4c45319ad17831286f526b
References: bsc#1023764

When we're receiving a timeout we should be checking for queue
full status; if there are still some packets pending we should
be resetting the counter to ensure we're not missing out any
packets which are still queued.

Signed-off-by: Hannes Reinecke <hare@suse.com>
Acked-by: Johannes Thumshirn <jth@kernel.org>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>

---
 drivers/scsi/libfc/fc_fcp.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/scsi/libfc/fc_fcp.c b/drivers/scsi/libfc/fc_fcp.c
index f087c6e..b68a3f7 100644
--- a/drivers/scsi/libfc/fc_fcp.c
+++ b/drivers/scsi/libfc/fc_fcp.c
@@ -953,8 +953,7 @@ static void fc_fcp_resp(struct fc_fcp_pkt *fsp, struct fc_frame *fp)
 			 * If this expires without data, we may do SRR.
 			 */
 			if (fsp->lp->qfull) {
-				FC_FCP_DBG(fsp, "tgt %6.6x data underrun, "
-					   "retry due to queue busy\n",
+				FC_FCP_DBG(fsp, "tgt %6.6x queue busy retry\n",
 					   fsp->rport->port_id);
 				return;
 			}
-- 
1.8.5.6

