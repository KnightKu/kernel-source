Merge: ea1f4e9 76f6386 3a928e9 991bfef 0c6e617 9c20530 cec6dba
From: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Aug 1 12:32:13 2016 -0500
Subject: PCI: aardvark: host controller merge
Git-commit: a04bee8285a71cdbb9076c3dc38be1f0b9a6b4b3
Patch-mainline: v4.8-rc1
References: fate#319899 fate#320700

The merge of commit
8c39d71 ("PCI: aardvark: Add Aardvark PCI host controller driver")
made changes to the driver. This commit reflects them.

Merge branches 'pci/host-aardvark', 'pci/host-altera', 'pci/host-dra7xx', 'pci/host-hv', 'pci/host-vmd' and 'pci/
-xilinx' into next

* pci/host-aardvark:
  arm64: dts: marvell: Add Aardvark PCIe support for Armada 3700
  PCI: aardvark: Add Aardvark PCI host controller driver
  dt-bindings: add DT binding for the Aardvark PCIe controller

* pci/host-altera:
  PCI: altera: Poll for link up status after retraining the link
  PCI: altera: Check link status before retrain link
  PCI: altera: Reorder read/write functions

* pci/host-dra7xx:
  PCI: dra7xx: Fix return value in case of error

* pci/host-hv:
  PCI: hv: Fix interrupt cleanup path
  PCI: hv: Handle all pending messages in hv_pci_onchannelcallback()
  PCI: hv: Don't leak buffer in hv_pci_onchannelcallback()

* pci/host-vmd:
  x86/PCI: VMD: Separate MSI and MSI-X vector sharing
  x86/PCI: VMD: Use x86_vector_domain as parent domain
  x86/PCI: VMD: Use lock save/restore in interrupt enable path
  x86/PCI: VMD: Initialize list item in IRQ disable
  x86/PCI: VMD: Select device dma ops to override

* pci/host-xilinx:
  PCI: xilinx: Fix return value in case of error

Manually apply changes from pci/demodularize-hosts and
pci/host-request-windows to drivers/pci/host/pci-aardvark.c

Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---
 drivers/pci/host/pci-aardvark.c |   29 +++++++++--------------------
 1 file changed, 9 insertions(+), 20 deletions(-)

--- a/drivers/pci/host/pci-aardvark.c
+++ b/drivers/pci/host/pci-aardvark.c
@@ -4,6 +4,8 @@
  *
  * Copyright (C) 2016 Marvell
  *
+ * Author: Hezi Shahmoon <hezi.shahmoon@marvell.com>
+ *
  * This file is licensed under the terms of the GNU General Public
  * License version 2.  This program is licensed "as is" without any
  * warranty of any kind, whether express or implied.
@@ -15,7 +17,7 @@
 #include <linux/irqdomain.h>
 #include <linux/kernel.h>
 #include <linux/pci.h>
-#include <linux/module.h>
+#include <linux/init.h>
 #include <linux/platform_device.h>
 #include <linux/of_address.h>
 #include <linux/of_pci.h>
@@ -856,13 +858,15 @@ static int advk_pcie_parse_request_of_pc
 	if (err)
 		return err;
 
+	err = devm_request_pci_bus_resources(dev, &pcie->resources);
+	if (err)
+		goto out_release_res;
+
 	resource_list_for_each_entry(win, &pcie->resources) {
-		struct resource *parent = NULL;
 		struct resource *res = win->res;
 
 		switch (resource_type(res)) {
 		case IORESOURCE_IO:
-			parent = &ioport_resource;
 			advk_pcie_set_ob_win(pcie, 1,
 					     upper_32_bits(res->start),
 					     lower_32_bits(res->start),
@@ -870,14 +874,11 @@ static int advk_pcie_parse_request_of_pc
 					     lower_32_bits(res->start),
 					     OB_PCIE_IO);
 			err = pci_remap_iospace(res, iobase);
-			if (err) {
+			if (err)
 				dev_warn(dev, "error %d: failed to map resource %pR\n",
 					 err, res);
-				continue;
-			}
 			break;
 		case IORESOURCE_MEM:
-			parent = &iomem_resource;
 			advk_pcie_set_ob_win(pcie, 0,
 					     upper_32_bits(res->start),
 					     lower_32_bits(res->start),
@@ -889,14 +890,6 @@ static int advk_pcie_parse_request_of_pc
 		case IORESOURCE_BUS:
 			pcie->root_bus_nr = res->start;
 			break;
-		default:
-			continue;
-		}
-
-		if (parent) {
-			err = devm_request_resource(dev, parent, res);
-			if (err)
-				goto out_release_res;
 		}
 	}
 
@@ -1005,8 +998,4 @@ static struct platform_driver advk_pcie_
 	},
 	.probe = advk_pcie_probe,
 };
-module_platform_driver(advk_pcie_driver);
-
-MODULE_AUTHOR("Hezi Shahmoon <hezi.shahmoon@marvell.com>");
-MODULE_DESCRIPTION("Aardvark PCIe driver");
-MODULE_LICENSE("GPL v2");
+builtin_platform_driver(advk_pcie_driver);
