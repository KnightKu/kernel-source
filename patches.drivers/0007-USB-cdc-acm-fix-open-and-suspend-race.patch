From d9309adfa23588bd84e7c410d16d7a5bf1612efa Mon Sep 17 00:00:00 2001
From: Johan Hovold <jhovold@gmail.com>
Date: Mon, 26 May 2014 19:23:42 +0200
Subject: [PATCH 7/8] USB: cdc-acm: fix open and suspend race
References: bsc#1033771
Git-commit: 703df3297fb1950b0aa53e656108eb936d3f21d9
Patch-mainline: v3.16

We must not do the usb_autopm_put_interface() before submitting the read
urbs or we might end up doing I/O to a suspended device.

Fixes: 088c64f81284 ("USB: cdc-acm: re-write read processing")
Signed-off-by: Johan Hovold <jhovold@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/class/cdc-acm.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
index f9aec94..7abd7d7 100644
--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -503,8 +503,6 @@ static int acm_tty_open(struct tty_struct *tty, struct file *filp)
 	    (acm->ctrl_caps & USB_CDC_CAP_LINE))
 		goto bail_out;
 
-	usb_autopm_put_interface(acm->control);
-
 	/*
 	 * Unthrottle device in case the TTY was closed while throttled.
 	 */
@@ -519,6 +517,7 @@ static int acm_tty_open(struct tty_struct *tty, struct file *filp)
 	set_bit(ASYNCB_INITIALIZED, &acm->port.flags);
 	rv = tty_port_block_til_ready(&acm->port, tty, filp);
 
+	usb_autopm_put_interface(acm->control);
 	mutex_unlock(&acm->mutex);
 out:
 	mutex_unlock(&open_mutex);
-- 
2.10.2

