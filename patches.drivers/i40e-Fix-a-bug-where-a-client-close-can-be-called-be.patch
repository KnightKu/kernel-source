From: Anjali Singhai Jain <anjali.singhai@intel.com>
Date: Wed, 27 Jul 2016 12:02:30 -0700
Subject: i40e: Fix a bug where a client close can be called before an open is
 complete
Patch-mainline: v4.9-rc1
Git-commit: 3a0f52928a0a06a7c4c735cd325ca646a1e40fae
References: bsc#1024346 FATE#321239 bsc#1024373 FATE#321247

The client->open call in this path was not protected with the
client instance mutex, and hence the client->close can get initiated
before the open completes.

Change-Id: I0ed60c38868dd3f44966b6ed49a063d0e5b7edf5
Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Acked-by: David Chang <dchang@suse.com>
---
 drivers/net/ethernet/intel/i40e/i40e_client.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/net/ethernet/intel/i40e/i40e_client.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_client.c
@@ -559,6 +559,7 @@ void i40e_client_subtask(struct i40e_pf
 				 pf->hw.bus.device, pf->hw.bus.func);
 		}
 
+		mutex_lock(&i40e_client_instance_mutex);
 		/* Send an Open request to the client */
 		atomic_inc(&cdev->ref_cnt);
 		if (client->ops && client->ops->open)
@@ -572,6 +573,7 @@ void i40e_client_subtask(struct i40e_pf
 			atomic_dec(&client->ref_cnt);
 			continue;
 		}
+		mutex_unlock(&i40e_client_instance_mutex);
 	}
 	mutex_unlock(&i40e_client_mutex);
 }
