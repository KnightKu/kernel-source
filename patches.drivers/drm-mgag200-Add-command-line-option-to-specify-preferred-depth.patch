From: Egbert Eich <eich@suse.de>
Date: Tue Aug 26 11:23:17 2014 +0200
Subject: drm/mgag200: Add command line option to specify preferred depth
Patch-mainline: to be upstreamed

References: bnc#893040
Signed-off-by: Egbert Eich <eich@suse.com>

G200 is old hardware. When KMS was designed around 2007 non of the
chipsets current at this time had any restrictions to video modes
depending on the depth. Thus video modes are validated independent
of the depth which is purely a property of the scanout buffer.
The mgag200 driver however has some bandwidth limitations and the
bandwidth required depends on the bpp. Since the video mode is validated
before the depth/bpp is actually known we are missing an important piece of
information at validation time.
So far we assumed the highest possible bpp value (except for systems with
video memory <= 2MB). Unfortunately this will kill some badly needed higher
res modes at lower depths.
This patch adds a cludge which allows to set the desired depth for the
mgag200 driver with the boot option mgag200.preferreddepth=16|24.

This is a KLUDGE(!) to get around the shortcomings of the mode setting
model for older hardware.

Signed-off-by: Egbert Eich <eich@suse.de>
---
 drivers/gpu/drm/mgag200/mgag200_drv.c  | 11 +++++++++++
 drivers/gpu/drm/mgag200/mgag200_main.c | 27 ++++++++++++++++++++++-----
 2 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/mgag200/mgag200_drv.c b/drivers/gpu/drm/mgag200/mgag200_drv.c
index dd08eaf..7a9267b 100644
--- a/drivers/gpu/drm/mgag200/mgag200_drv.c
+++ b/drivers/gpu/drm/mgag200/mgag200_drv.c
@@ -23,9 +23,12 @@
  * functions
  */
 int mgag200_modeset = -1;
+int mgag200_preferred_depth __read_mostly = 0;
 
 MODULE_PARM_DESC(modeset, "Disable/Enable modesetting");
 module_param_named(modeset, mgag200_modeset, int, 0400);
+MODULE_PARM_DESC(preferreddepth, "Set preferred bpp");
+module_param_named(preferreddepth, mgag200_preferred_depth, int, 0400);
 
 static struct drm_driver driver;
 
@@ -200,6 +203,14 @@ static int __init mgag200_init(void)
 
 	if (mgag200_modeset == 0)
 		return -EINVAL;
+	switch (mgag200_preferred_depth) {
+	case 0: /* driver default */
+	case 16:
+	case 24:
+		break;
+	default:
+		return -EINVAL;
+	}
 	return drm_pci_init(&driver, &mgag200_pci_driver);
 }
 
diff --git a/drivers/gpu/drm/mgag200/mgag200_main.c b/drivers/gpu/drm/mgag200/mgag200_main.c
index 4a60f31..48d1c12 100644
--- a/drivers/gpu/drm/mgag200/mgag200_main.c
+++ b/drivers/gpu/drm/mgag200/mgag200_main.c
@@ -14,6 +14,8 @@
 #include <drm/drm_crtc_helper.h>
 #include "mgag200_drv.h"
 
+extern int mgag200_preferred_depth __read_mostly;
+
 static void mga_user_framebuffer_destroy(struct drm_framebuffer *fb)
 {
 	struct mga_framebuffer *mga_fb = to_mga_framebuffer(fb);
@@ -325,12 +327,27 @@ int mgag200_driver_load(struct drm_device *dev, unsigned long flags)
 
 	drm_mode_config_init(dev);
 	dev->mode_config.funcs = (void *)&mga_mode_funcs;
-	if (IS_G200_SE(mdev) && mdev->mc.vram_size < (2048*1024)) {
-		mdev->preferred_bpp = dev->mode_config.preferred_depth = 16;
+	if (mgag200_preferred_depth == 0) {
+		if (IS_G200_SE(mdev) && mdev->mc.vram_size <= (2048*1024)) {
+			mdev->preferred_bpp =
+				dev->mode_config.preferred_depth = 16;
+		} else {
+			/* prefer 16bpp on low end gpus with limited VRAM */
+			mdev->preferred_bpp = 32;
+			dev->mode_config.preferred_depth = 24;
+		}
 	} else {
-		/* prefer 16bpp on low end gpus with limited VRAM */
-		mdev->preferred_bpp = 32;
-		dev->mode_config.preferred_depth = 24;
+		dev->mode_config.preferred_depth = mgag200_preferred_depth;
+		switch (mgag200_preferred_depth) {
+		case 16:
+			mdev->preferred_bpp = 16;
+			break;
+		case 24:
+			mdev->preferred_bpp = 32;
+			break;
+		default:
+			goto out;
+		}
 	}
 	dev->mode_config.prefer_shadow = 1;
 
