From 7f1b21591a632c6caefd9aa53b630808f4f477e1 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@redhat.com>
Date: Tue, 4 Oct 2016 15:00:47 -0400
Subject: [PATCH] dm cache metadata: use cursor api in
 blocks_are_clean_separate_dirty()
Git-commit: 7f1b21591a632c6caefd9aa53b630808f4f477e1
Patch-mainline: v4.11-rc1
References: FATE#321488

Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/dm-cache-metadata.c | 33 ++++++++++++++++++++++++++-------
 1 file changed, 26 insertions(+), 7 deletions(-)

diff --git a/drivers/md/dm-cache-metadata.c b/drivers/md/dm-cache-metadata.c
index 7e31a4b..e4c2c1a 100644
--- a/drivers/md/dm-cache-metadata.c
+++ b/drivers/md/dm-cache-metadata.c
@@ -931,27 +931,46 @@ static int blocks_are_clean_separate_dirty(struct dm_cache_metadata *cmd,
 	bool dirty_flag;
 	*result = true;
 
-	// FIXME: use a cursor so we can benefit from preloading metadata.
+	r = dm_bitset_cursor_begin(&cmd->dirty_info, cmd->dirty_root,
+				   from_cblock(begin), &cmd->dirty_cursor);
+	if (r) {
+		DMERR("%s: dm_bitset_cursor_begin for dirty failed", __func__);
+		return r;
+	}
+
+	r = dm_bitset_cursor_skip(&cmd->dirty_cursor, from_cblock(begin));
+	if (r) {
+		DMERR("%s: dm_bitset_cursor_skip for dirty failed", __func__);
+		dm_bitset_cursor_end(&cmd->dirty_cursor);
+		return r;
+	}
+
 	while (begin != end) {
 		/*
 		 * We assume that unmapped blocks have their dirty bit
 		 * cleared.
 		 */
-		r = dm_bitset_test_bit(&cmd->dirty_info, cmd->dirty_root,
-				       from_cblock(begin), &cmd->dirty_root, &dirty_flag);
-		if (r)
-			return r;
-
+		dirty_flag = dm_bitset_cursor_get_value(&cmd->dirty_cursor);
 		if (dirty_flag) {
-			DMERR("cache block %llu is dirty",
+			DMERR("%s: cache block %llu is dirty", __func__,
 			      (unsigned long long) from_cblock(begin));
+			dm_bitset_cursor_end(&cmd->dirty_cursor);
 			*result = false;
 			return 0;
 		}
 
+		r = dm_bitset_cursor_next(&cmd->dirty_cursor);
+		if (r) {
+			DMERR("%s: dm_bitset_cursor_next for dirty failed", __func__);
+			dm_bitset_cursor_end(&cmd->dirty_cursor);
+			return r;
+		}
+
 		begin = to_cblock(from_cblock(begin) + 1);
 	}
 
+	dm_bitset_cursor_end(&cmd->dirty_cursor);
+
 	return 0;
 }
 
-- 
2.10.2

