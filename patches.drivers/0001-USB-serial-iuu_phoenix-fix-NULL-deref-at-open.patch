From dbc74a1b98690443f0c64fb0a96ea95de188425f Mon Sep 17 00:00:00 2001
From: Johan Hovold <johan@kernel.org>
Date: Tue, 3 Jan 2017 16:39:47 +0100
Subject: [PATCH] USB: serial: iuu_phoenix: fix NULL-deref at open
References: bsc#1033794
Git-commit: 90507d54f712d81b74815ef3a4bbb555cd9fab2f
Patch-mainline: v4.10

Fix NULL-pointer dereference at open should the device lack a bulk-in or
bulk-out endpoint:

Unable to handle kernel NULL pointer dereference at virtual address 00000030
...
PC is at iuu_open+0x78/0x59c [iuu_phoenix]

Fixes: 07c3b1a10016 ("USB: remove broken usb-serial num_endpoints
check")
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Johan Hovold <johan@kernel.org>
Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/serial/iuu_phoenix.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/usb/serial/iuu_phoenix.c b/drivers/usb/serial/iuu_phoenix.c
index cf2668e..3abbc21 100644
--- a/drivers/usb/serial/iuu_phoenix.c
+++ b/drivers/usb/serial/iuu_phoenix.c
@@ -113,6 +113,11 @@ static int iuu_alloc_buf(struct iuu_private *priv)
 static int iuu_startup(struct usb_serial *serial)
 {
 	struct iuu_private *priv;
+	unsigned char num_ports = serial->num_ports;
+
+	if (serial->num_bulk_in < num_ports || serial->num_bulk_out < num_ports)
+		return -ENODEV;
+
 	priv = kzalloc(sizeof(struct iuu_private), GFP_KERNEL);
 	dbg("%s- priv allocation success", __func__);
 	if (!priv)
-- 
2.10.2

