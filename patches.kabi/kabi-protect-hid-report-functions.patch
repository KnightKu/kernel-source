From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect hid report functions
Patch-mainline: never, kabi
References: kabi

In 4.4.129, commit 60f6c860c25892b4a1c8791cec0427af0d96bf86 (HID: core:
Fix size as type u32), upstream commit
6de0b13cc0b4ba10e98a9263d7a83b940720b77a changed int size to u32 size.
It made the kABI checker to complain.

Given the types are of the same size, just ignore the change and let the
code count with unsigned type.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/hid/hid-core.c |    9 +++++++++
 include/linux/hid.h    |    9 +++++++++
 2 files changed, 18 insertions(+)

--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1422,8 +1422,13 @@ out:
 }
 EXPORT_SYMBOL_GPL(__hid_request);
 
+#ifdef __GENKSYMS__
+int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, int size,
+		int interrupt)
+#else
 int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, u32 size,
 		int interrupt)
+#endif
 {
 	struct hid_report_enum *report_enum = hid->report_enum + type;
 	struct hid_report *report;
@@ -1487,7 +1492,11 @@ EXPORT_SYMBOL_GPL(hid_report_raw_event);
  *
  * This is data entry for lower layers.
  */
+#ifdef __GENKSYMS__
+int hid_input_report(struct hid_device *hid, int type, u8 *data, int size, int interrupt)
+#else
 int hid_input_report(struct hid_device *hid, int type, u8 *data, u32 size, int interrupt)
+#endif
 {
 	struct hid_report_enum *report_enum;
 	struct hid_driver *hdrv;
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -793,7 +793,11 @@ extern int hidinput_connect(struct hid_d
 extern void hidinput_disconnect(struct hid_device *);
 
 int hid_set_field(struct hid_field *, unsigned, __s32);
+#ifdef __GENKSYMS__
+int hid_input_report(struct hid_device *, int type, u8 *, int, int);
+#else
 int hid_input_report(struct hid_device *, int type, u8 *, u32, int);
+#endif
 int hidinput_find_field(struct hid_device *hid, unsigned int type, unsigned int code, struct hid_field **field);
 struct hid_field *hidinput_get_led_field(struct hid_device *hid);
 unsigned int hidinput_count_leds(struct hid_device *hid);
@@ -1104,8 +1108,13 @@ static inline u32 hid_report_len(struct
 	return ((report->size - 1) >> 3) + 1 + (report->id > 0);
 }
 
+#ifdef __GENKSYMS__
+int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, int size,
+		int interrupt);
+#else
 int hid_report_raw_event(struct hid_device *hid, int type, u8 *data, u32 size,
 		int interrupt);
+#endif
 
 /* HID quirks API */
 u32 usbhid_lookup_quirk(const u16 idVendor, const u16 idProduct);
