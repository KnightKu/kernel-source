From 23541b1c9820dd9d07cfd552ba757989265b7668 Mon Sep 17 00:00:00 2001
From: Alexander Graf <agraf@suse.de>
Date: Fri, 16 Sep 2016 10:55:24 +0200
Subject: [PATCH] kabi: Keep kvm kabi stable across kvm arm vtimer enablement
Patch-mainline: no, kabi patches are downstream
References: bsc#999212

The patch "patches.arch/arm64-kvm-Route-vtimer-events-to-user-space.patch"
introduces a new kvm_run exit field which is fully transparent to every user
as it resides inside an anonymous union.

This patch ensures that the kabi checker thinks it's safe too.

Signed-off-by: Alexander Graf <agraf@suse.de>
---
 arch/arm64/include/asm/kvm_host.h | 2 ++
 include/uapi/linux/kvm.h          | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/arch/arm64/include/asm/kvm_host.h b/arch/arm64/include/asm/kvm_host.h
index 831bc33..cb73362 100644
--- a/arch/arm64/include/asm/kvm_host.h
+++ b/arch/arm64/include/asm/kvm_host.h
@@ -171,8 +171,10 @@ struct kvm_vcpu_arch {
 	/* Detect first run of a vcpu */
 	bool has_run_once;
 
+#ifndef __GENKSYMS__
 	/* User space wants timer notifications */
 	bool user_space_arm_timers;
+#endif
 };
 
 #define vcpu_gp_regs(v)		(&(v)->arch.ctxt.gp_regs)
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index c601a4f..7fd3427 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -340,9 +340,11 @@ struct kvm_run {
 			__u8 vector;
 		} eoi;
 		/* KVM_EXIT_ARM_TIMER */
+#ifndef __GENKSYMS__
 		struct {
 			__u8 timesource;
 		} arm_timer;
+#endif
 		/* Fix the size of the union. */
 		char padding[256];
 	};
-- 
2.6.6

