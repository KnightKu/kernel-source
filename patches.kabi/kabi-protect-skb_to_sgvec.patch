From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect skb_to_sgvec*
Patch-mainline: never, kabi
References: kabi

In 4.4.128, commit 9d4f8dbb3504101ec459d8fc9e52563a4c3eacd9 (skbuff:
return -EMSGSIZE in skb_to_sgvec to prevent overflow), upstream commit
48a1df65334b74bd7531f932cca5928932abf769 added __must_check to
skb_to_sgvec_nomark and skb_to_sgvec.  It made the kABI checker to
complain.

This is only a cosmetic change, so hide it from the checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/skbuff.h |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -879,10 +879,17 @@ struct sk_buff *skb_realloc_headroom(str
 				     unsigned int headroom);
 struct sk_buff *skb_copy_expand(const struct sk_buff *skb, int newheadroom,
 				int newtailroom, gfp_t priority);
+#ifdef __GENKSYMS__
+int skb_to_sgvec_nomark(struct sk_buff *skb, struct scatterlist *sg,
+				     int offset, int len);
+int skb_to_sgvec(struct sk_buff *skb, struct scatterlist *sg,
+			      int offset, int len);
+#else
 int __must_check skb_to_sgvec_nomark(struct sk_buff *skb, struct scatterlist *sg,
 				     int offset, int len);
 int __must_check skb_to_sgvec(struct sk_buff *skb, struct scatterlist *sg,
 			      int offset, int len);
+#endif
 int skb_cow_data(struct sk_buff *skb, int tailbits, struct sk_buff **trailer);
 int skb_pad(struct sk_buff *skb, int pad);
 #define dev_kfree_skb(a)	consume_skb(a)
