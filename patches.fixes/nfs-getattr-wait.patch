From: NeilBrown <neilb@suse.com>
Subject: NFS: allow flush-on-stat to be disabled.
References: bsc#1065726
Patch-mainline: never, test only

The fact that nfs forces a flush on stat might be the
cause of customer performance issues.  The customers
application calls stat much more often than needed.
Apparently this doesn't cause as much problem on Solaris
as it seems to on Linux.
In order to smooth the migration from Solaris for the
customer, add an nfs module parameter "flush_on_stat"
which defaults to "Y" but can be set to "N".
This can cause mtime to be wrong sometimes when a file
is open for write.

Signed-off-by: NeilBrown <neilb@suse.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/inode.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@ -511,6 +511,9 @@ void nfs_setattr_update_inode(struct ino
 	}
 }
 
+static int flush_on_stat = 1;
+module_param(flush_on_stat, bool, 0644);
+
 int nfs_getattr(struct vfsmount *mnt, struct dentry *dentry, struct kstat *stat)
 {
 	struct inode *inode = dentry->d_inode;
@@ -518,7 +521,7 @@ int nfs_getattr(struct vfsmount *mnt, st
 	int err;
 
 	/* Flush out writes to the server in order to update c/mtime.  */
-	if (S_ISREG(inode->i_mode)) {
+	if (S_ISREG(inode->i_mode) && flush_on_stat) {
 		err = filemap_write_and_wait(inode->i_mapping);
 		if (err)
 			goto out;
