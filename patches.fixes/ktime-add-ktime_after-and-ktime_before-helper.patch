From: Daniel Borkmann <dborkman@redhat.com>
Date: Wed, 11 Jun 2014 18:19:28 +0200
Subject: ktime: add ktime_after and ktime_before helpe
References: bsc#904348
Patch-Mainline: v3.16
Git-commit: 67cb9366ff5f99868100198efba5ca88aaa6ad25

Add two minimal helper functions analogous to time_before() and
time_after() that will later on both be needed by SCTP code.

[hare: Ported to SLES11 SP3]

Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 include/linux/ktime.h | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/include/linux/ktime.h b/include/linux/ktime.h
index e83512f..2c4c41b 100644
--- a/include/linux/ktime.h
+++ b/include/linux/ktime.h
@@ -301,6 +301,30 @@ static inline int ktime_compare(const ktime_t cmp1, const ktime_t cmp2)
 	return 0;
 }
 
+/**
+ * ktime_after - Compare if a ktime_t value is bigger than another one.
+ * @cmp1:	comparable1
+ * @cmp2:	comparable2
+ *
+ * Return: true if cmp1 happened after cmp2.
+ */
+static inline bool ktime_after(const ktime_t cmp1, const ktime_t cmp2)
+{
+	return ktime_compare(cmp1, cmp2) > 0;
+}
+
+/**
+ * ktime_before - Compare if a ktime_t value is smaller than another one.
+ * @cmp1:	comparable1
+ * @cmp2:	comparable2
+ *
+ * Return: true if cmp1 happened before cmp2.
+ */
+static inline bool ktime_before(const ktime_t cmp1, const ktime_t cmp2)
+{
+	return ktime_compare(cmp1, cmp2) < 0;
+}
+
 static inline s64 ktime_to_us(const ktime_t kt)
 {
 	struct timeval tv = ktime_to_timeval(kt);
-- 
1.8.5.2

