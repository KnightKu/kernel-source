From: Michal Hocko <mhocko@suse.cz> 
Subject: mm: exclude reserved pages from dirtyable memory 32b fix
Patch-mainline: never
References: bnc#940017, bnc#949298

patches.fixes/mm-exclude-reserved-pages-from-dirtyable-memory.patch has reduced
the amount of dirtyable memory by memory reserves. This is a proper thing to do
but 32b kernels with highmem_is_dirtyable disabled (which is the default) can
end up in an agressive throttling earlier now. This is the case especially on
larger 32b machines. The problem is inherent to this architecture but we can
indeed be less agressive so let's reduce the highmem dirtyable memory by its
high watermark. This is actually what the original ab8fabd46f81 ("mm: exclude
reserved pages from dirtyable memory") did but we haven't backported per zone
reserves (see patches.fixes/mm-exclude-reserved-pages-from-dirtyable-memory.patch).

We do not need to introduce the same behavior because high watermark is actually
the reserve for any highmem zone.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 mm/page-writeback.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- a/mm/page-writeback.c
+++ b/mm/page-writeback.c
@@ -368,6 +368,12 @@ static unsigned long highmem_dirtyable_m
 
 		x += zone_page_state(z, NR_FREE_PAGES) +
 		     zone_reclaimable_pages(z);
+
+		/* Do not include highmem reserves */
+		if (high_wmark_pages(z) > x)
+			x -= high_wmark_pages(z);
+		else
+			x = 0;
 	}
 	/*
 	 * Make sure that the number of highmem pages is never larger
