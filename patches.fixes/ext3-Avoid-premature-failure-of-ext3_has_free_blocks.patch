From: Jan Kara <jack@suse.cz>
Subject: ext3: Avoid premature failure of ext3_has_free_blocks()
Patch-mainline: Never, ext3 was removed from upstream
References: bsc#1016668

Due to per-cpu counter errors, ext3_has_free_blocks() can return there is
no free space in the filesystem although there is still quite some space.
Fix the function to sum the per-cpu counters and check again before returning
there is no free space.

Signed-off-by: Jan Kara <jack@suse.cz>

---
 fs/ext3/balloc.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/fs/ext3/balloc.c
+++ b/fs/ext3/balloc.c
@@ -1441,6 +1441,10 @@ static int ext3_has_free_blocks(struct e
 
 	free_blocks = percpu_counter_read_positive(&sbi->s_freeblocks_counter);
 	root_blocks = le32_to_cpu(sbi->s_es->s_r_blocks_count);
+	if (free_blocks >= root_blocks + 1)
+		return 1;
+	/* Per-cpu counter error can lead to false ENOSPC. Sum the counter. */
+	free_blocks = percpu_counter_sum_positive(&sbi->s_freeblocks_counter);
 	if (free_blocks < root_blocks + 1 && !capable(CAP_SYS_RESOURCE) &&
 		sbi->s_resuid != current_fsuid() &&
 		(sbi->s_resgid == 0 || !in_group_p (sbi->s_resgid))) {
