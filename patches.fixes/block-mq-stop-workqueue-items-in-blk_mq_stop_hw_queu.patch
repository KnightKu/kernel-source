From: Hannes Reinecke <hare@suse.de>
Date: Tue, 27 Mar 2018 08:53:11 +0200
Subject: [PATCH] block-mq: stop workqueue items in blk_mq_stop_hw_queue()
References: bsc#1084967
Patch-Mainline: Never, SLE12-SP3 specific

When stopping a queue we need to ensure that all work items are
finished; otherwise the workqueue functions might run on invalid
structures.

Reported-by: Steve Schremmer <sschremm@netapp.com>
Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 block/blk-mq.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 992b93021f03..3ca877dc2b63 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1089,9 +1089,9 @@ EXPORT_SYMBOL(blk_mq_queue_stopped);
 
 void blk_mq_stop_hw_queue(struct blk_mq_hw_ctx *hctx)
 {
-	cancel_work(&hctx->run_work);
-	cancel_delayed_work(&hctx->delay_work);
-	cancel_delayed_work(&hctx->delayed_run_work);
+	cancel_work_sync(&hctx->run_work);
+	cancel_delayed_work_sync(&hctx->delay_work);
+	cancel_delayed_work_sync(&hctx->delayed_run_work);
 	set_bit(BLK_MQ_S_STOPPED, &hctx->state);
 }
 EXPORT_SYMBOL(blk_mq_stop_hw_queue);
@@ -1150,6 +1150,9 @@ static void blk_mq_run_work_fn(struct work_struct *work)
 
 	hctx = container_of(work, struct blk_mq_hw_ctx, run_work);
 
+	if (unlikely(blk_mq_hctx_stopped(hctx) ||
+		     !blk_mq_hw_queue_mapped(hctx)))
+		return;
 	__blk_mq_run_hw_queue(hctx);
 }
 
@@ -1159,6 +1162,9 @@ static void blk_mq_delayed_run_work_fn(struct work_struct *work)
 
 	hctx = container_of(work, struct blk_mq_hw_ctx, delayed_run_work.work);
 
+	if (unlikely(blk_mq_hctx_stopped(hctx) ||
+		     !blk_mq_hw_queue_mapped(hctx)))
+		return;
 	__blk_mq_run_hw_queue(hctx);
 }
 
-- 
2.12.3

