From: NeilBrown <neilb@suse.com>
Subject: [PATCH] sunrpc: use supplimental groups in auth hash.
Patch-mainline: not yet, under development
References: bsc#1012917

Some sites vary some supplimental groups a lot.
To avoid unduely long hash chains, include all of these
in the hash calculcation.

Also use hash_32 as it provides better results on 3.0 kernels.

Signed-off-by: NeilBrown <neilb@suse.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 net/sunrpc/auth_generic.c |   10 ++++++++--
 net/sunrpc/auth_unix.c    |   10 ++++++++--
 2 files changed, 16 insertions(+), 4 deletions(-)

--- a/net/sunrpc/auth_generic.c
+++ b/net/sunrpc/auth_generic.c
@@ -73,8 +73,14 @@ static struct rpc_cred *generic_bind_cre
 static int
 generic_hash_cred(struct auth_cred *acred, unsigned int hashbits)
 {
-	return hash_64(acred->gid | ((u64)acred->uid << (sizeof(gid_t) * 8)),
-		       hashbits);
+	int ret = hash_32(acred->uid, 32);
+	if (acred->group_info) {
+		int g;
+
+		for (g = 0; g < acred->group_info->ngroups; g++)
+			ret = hash_32(ret ^ GROUP_AT(acred->group_info, g), 32);
+	}
+	return hash_32(ret ^ acred->gid, hashbits);
 }
 
 /*
--- a/net/sunrpc/auth_unix.c
+++ b/net/sunrpc/auth_unix.c
@@ -51,8 +51,14 @@ unx_destroy(struct rpc_auth *auth)
 static int
 unx_hash_cred(struct auth_cred *acred, unsigned int hashbits)
 {
-	return hash_64(acred->gid | ((u64) acred->uid << (sizeof(gid_t) * 8)),
-		       hashbits);
+	int ret = hash_32(acred->uid, 32);
+	if (acred->group_info) {
+		int g;
+
+		for (g = 0; g < acred->group_info->ngroups && g < NFS_NGROUPS; g++)
+			ret = hash_32(ret ^ GROUP_AT(acred->group_info, g), 32);
+	}
+	return hash_32(ret ^ acred->gid, hashbits);
 }
 
 /*
