From: Jan Kara <jack@suse.com>
Patch-mainline: Never, fixed differently by 5accdf82ba25a and company
References: bsc#935123
Subject: fs: Fix deadlocks between sync and fs freezing

Make sure we don't sync a superblock that is frozen so that we don't block on
frozen filesystem while holding s_umount semaphore.

Signed-off-by: Jan Kara <jack@suse.com>

---
 fs/super.c         |   20 +++++++++++++++++++-
 fs/sync.c          |    2 +-
 include/linux/fs.h |    1 +
 3 files changed, 21 insertions(+), 2 deletions(-)

--- a/fs/super.c
+++ b/fs/super.c
@@ -420,7 +420,8 @@ void sync_supers(void)
  *	Scans the superblock list and calls given function, passing it
  *	locked superblock and given argument.
  */
-void iterate_supers(void (*f)(struct super_block *, void *), void *arg)
+static void __iterate_supers(void (*f)(struct super_block *, void *), void *arg,
+			     int thawed)
 {
 	struct super_block *sb, *p = NULL;
 
@@ -431,7 +432,14 @@ void iterate_supers(void (*f)(struct sup
 		sb->s_count++;
 		spin_unlock(&sb_lock);
 
+retry:
+		if (thawed)
+			vfs_check_frozen(sb, SB_FREEZE_WRITE);
 		down_read(&sb->s_umount);
+		if (thawed && sb->s_frozen != SB_UNFROZEN) {
+			up_read(&sb->s_umount);
+			goto retry;
+		}
 		if (sb->s_root)
 			f(sb, arg);
 		up_read(&sb->s_umount);
@@ -446,6 +454,16 @@ void iterate_supers(void (*f)(struct sup
 	spin_unlock(&sb_lock);
 }
 
+void iterate_supers(void (*f)(struct super_block *, void *), void *arg)
+{
+	__iterate_supers(f, arg, 0);
+}
+
+void iterate_supers_thawed(void (*f)(struct super_block *, void *), void *arg)
+{
+	__iterate_supers(f, arg, 1);
+}
+
 /**
  *	get_super - get the superblock of a device
  *	@bdev: device to get the superblock for
--- a/fs/sync.c
+++ b/fs/sync.c
@@ -102,7 +102,7 @@ static void sync_filesystems(int wait, u
 		.sincejif = sincejif,
 		.wait = wait,
 	};
-	iterate_supers(sync_one_sb, &arg);
+	iterate_supers_thawed(sync_one_sb, &arg);
 }
 
 /*
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@ -2518,6 +2518,7 @@ extern struct super_block *get_active_su
 extern struct super_block *user_get_super(dev_t);
 extern void drop_super(struct super_block *sb);
 extern void iterate_supers(void (*)(struct super_block *, void *), void *);
+extern void iterate_supers_thawed(void (*)(struct super_block *, void *), void *);
 
 extern int dcache_dir_open(struct inode *, struct file *);
 extern int dcache_dir_close(struct inode *, struct file *);
