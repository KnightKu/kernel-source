From: Mark Tinguely <tinguely@sgi.com>
Subject: [PATCH 2/2] xfs_dmapi: fix the debug compilation of xfs_dmapi
Patch-mainline: Never, the DMAPI was rejected upstream
References: bsc#989056

I accidentally turned on dmapi debug compilation and noticed that it
generatated errors.

 1. dm_vp_to_handle() does not exist - it is dm_ip_to_handle()
 2. printf() in the kernel are printk().
 3. The items being printed are 64 bit unsigns.

These right functions (downgrade, upgrade, request) don't change
the rights but at least with debug turned on, they could be printed.

Signed-off-by: Mark Tinguely <tinguely@sgi.com>
Reviewed-by: Geoffrey Wehrman <gwehrman@sgi.com>
Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
---
 fs/xfs/dmapi/xfs_dm.c | 28 ++++++++++++----------------
 1 file changed, 12 insertions(+), 16 deletions(-)

diff --git a/fs/xfs/dmapi/xfs_dm.c b/fs/xfs/dmapi/xfs_dm.c
index 1970d0a508ee..7dd358cc5698 100644
--- a/fs/xfs/dmapi/xfs_dm.c
+++ b/fs/xfs/dmapi/xfs_dm.c
@@ -207,11 +207,7 @@ xfs_vp_to_hexhandle(
 	int		error;
 	int		i;
 
-	/*
-	 * XXX: dm_vp_to_handle doesn't exist.
-	 * 	Looks like this debug code is rather dead.
-	 */
-	if ((error = dm_vp_to_handle(inode, &handle)))
+	if ((error = dm_ip_to_handle(inode, &handle)))
 		return(error);
 
 	if (type == DM_FSYS_OBJ) {	/* a filesystem handle */
@@ -957,10 +953,10 @@ xfs_dm_downgrade_right(
 	char		buffer[sizeof(dm_handle_t) * 2 + 1];
 
 	if (!xfs_vp_to_hexhandle(inode, type, buffer)) {
-		printf("dm_downgrade_right: old %d new %d type %d handle %s\n",
+		printk("dm_downgrade_right: old %d new %d type %d handle %s\n",
 			right, DM_RIGHT_SHARED, type, buffer);
 	} else {
-		printf("dm_downgrade_right: old %d new %d type %d handle "
+		printk("dm_downgrade_right: old %d new %d type %d handle "
 			"<INVALID>\n", right, DM_RIGHT_SHARED, type);
 	}
 #endif	/* DEBUG_RIGHTS */
@@ -2113,8 +2109,8 @@ xfs_dm_round_hole(
 			return -EINVAL; /* requested length is too small */
 	}
 #ifdef CONFIG_DMAPI_DEBUG
-	printk("xfs_dm_round_hole: off %lu, len %ld, align %lu, "
-	       "filesize %llu, roff %ld, rlen %ld\n",
+	printk("xfs_dm_round_hole: off %llu, len %llu, align %llu, "
+	       "filesize %llu, roff %llu, rlen %llu\n",
 	       offset, length, align, filesize, *roff, *rlen);
 #endif
 	return 0; /* hole geometry successfully rounded */
@@ -2246,7 +2242,7 @@ xfs_dm_punch_hole(
 	}
 
 #ifdef CONFIG_DMAPI_DEBUG
-	printk("xfs_dm_punch_hole: off %lu, len %ld, align %lu\n",
+	printk("xfs_dm_punch_hole: off %llu, len %llu, align %llu\n",
 		off, len, align);
 #endif
 
@@ -2310,10 +2306,10 @@ xfs_dm_release_right(
 	char		buffer[sizeof(dm_handle_t) * 2 + 1];
 
 	if (!xfs_vp_to_hexhandle(inode, type, buffer)) {
-		printf("dm_release_right: old %d type %d handle %s\n",
+		printk("dm_release_right: old %d type %d handle %s\n",
 			right, type, buffer);
 	} else {
-		printf("dm_release_right: old %d type %d handle "
+		printk("dm_release_right: old %d type %d handle "
 			" <INVALID>\n", right, type);
 	}
 #endif	/* DEBUG_RIGHTS */
@@ -2364,10 +2360,10 @@ xfs_dm_request_right(
 	char		buffer[sizeof(dm_handle_t) * 2 + 1];
 
 	if (!xfs_vp_to_hexhandle(inode, type, buffer)) {
-		printf("dm_request_right: old %d new %d type %d flags 0x%x "
+		printk("dm_request_right: old %d new %d type %d flags 0x%x "
 			"handle %s\n", right, newright, type, flags, buffer);
 	} else {
-		printf("dm_request_right: old %d new %d type %d flags 0x%x "
+		printk("dm_request_right: old %d new %d type %d flags 0x%x "
 			"handle <INVALID>\n", right, newright, type, flags);
 	}
 #endif	/* DEBUG_RIGHTS */
@@ -2678,10 +2674,10 @@ xfs_dm_upgrade_right(
 	char		buffer[sizeof(dm_handle_t) * 2 + 1];
 
 	if (!xfs_vp_to_hexhandle(inode, type, buffer)) {
-		printf("dm_upgrade_right: old %d new %d type %d handle %s\n",
+		printk("dm_upgrade_right: old %d new %d type %d handle %s\n",
 			right, DM_RIGHT_EXCL, type, buffer);
 	} else {
-		printf("dm_upgrade_right: old %d new %d type %d handle "
+		printk("dm_upgrade_right: old %d new %d type %d handle "
 			"<INVALID>\n", right, DM_RIGHT_EXCL, type);
 	}
 #endif	/* DEBUG_RIGHTS */
-- 
2.11.0

