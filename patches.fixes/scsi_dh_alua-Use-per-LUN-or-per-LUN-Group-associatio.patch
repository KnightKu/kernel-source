From 0036275bc54ab486eaafc65f7d2b4d1dfcee7bf2 Mon Sep 17 00:00:00 2001
From: Hannes Reinecke <hare@suse.de>
Date: Wed, 25 Jun 2014 13:41:23 +0200
Subject: scsi_dh_alua: Use per-LUN or per-LUN-Group association
References: bnc#877514
Patch-Mainline: submitted to linux-scsi

SPC specifies the target port group state as being per LUN,
ie each LUN on the same target can have different target port
group states even with the same group id.
If several LUNs share the same target port group state they should
be part of a LUN group.
This patch implements parsing of the LUN group information and
falls back to a per-LUN configuration if none are found.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/scsi/device_handler/scsi_dh_alua.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/drivers/scsi/device_handler/scsi_dh_alua.c b/drivers/scsi/device_handler/scsi_dh_alua.c
index 95c9438..bb6e96c 100644
--- a/drivers/scsi/device_handler/scsi_dh_alua.c
+++ b/drivers/scsi/device_handler/scsi_dh_alua.c
@@ -81,6 +81,8 @@ struct alua_port_group {
 	unsigned char		target_id_str[256];
 	int			target_id_size;
 	int			group_id;
+	int			lun;
+	int			lugrp;
 	int			tpgs;
 	int			state;
 	int			pref;
@@ -356,7 +358,7 @@ static int alua_check_vpd(struct scsi_device *sdev, struct alua_dh_data *h)
 {
 	char target_id_str[256], *target_id = NULL;
 	int target_id_size;
-	int group_id = -1;
+	int group_id = -1, lun = sdev->lun, lugrp = 0;
 	unsigned char *d;
 	struct alua_port_group *tmp_pg, *pg = NULL;
 
@@ -422,6 +424,12 @@ static int alua_check_vpd(struct scsi_device *sdev, struct alua_dh_data *h)
 			/* Target port group */
 			group_id = (d[6] << 8) + d[7];
 			break;
+		case 0x6:
+			/* Logical unit group */
+			lugrp = (d[2] << 8) + d[3];
+			/* -1 indicates valid LUN group */
+			lun = -1;
+			break;
 		case 0x8:
 			/* SCSI name string */
 			if ((d[1] & 0x30) == 0x20) {
@@ -484,6 +492,13 @@ static int alua_check_vpd(struct scsi_device *sdev, struct alua_dh_data *h)
 				continue;
 			if (tmp_pg->target_id_size != target_id_size)
 				continue;
+			if (lun != -1) {
+				if (tmp_pg->lun != lun)
+					continue;
+			} else {
+				if (tmp_pg->lugrp != lugrp)
+					continue;
+			}
 			if (memcmp(tmp_pg->target_id, target_id,
 				   target_id_size))
 				continue;
@@ -522,6 +537,8 @@ static int alua_check_vpd(struct scsi_device *sdev, struct alua_dh_data *h)
 	}
 	pg->target_id_size = target_id_size;
 	pg->group_id = group_id;
+	pg->lun = lun;
+	pg->lugrp = lugrp;
 	pg->buff = pg->inq;
 	pg->bufflen = ALUA_INQUIRY_SIZE;
 	pg->tpgs = h->tpgs;
-- 
1.7.12.4

