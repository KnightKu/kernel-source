From: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date: Sat, 28 Nov 2015 01:29:30 +0300
Subject: [PATCH] vmxnet3: fix checks for dma mapping errors
Patch-mainline: v4.4-rc4
Git-commit: 5738a09d58d5ad2871f1f9a42bf6a3aa9ece5b3c (partial)
References: bsc#1045356

vmxnet3_drv does not check dma_addr with dma_mapping_error()
after mapping dma memory. The patch adds the checks and
tries to handle failures.

Found by Linux Driver Verification project (linuxtesting.org).

Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
Acked-by: Shrikrishna Khare <skhare@vmware.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Benjamin Poirier <bpoirier@suse.com>
---
 drivers/net/vmxnet3/vmxnet3_drv.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

--- a/drivers/net/vmxnet3/vmxnet3_drv.c
+++ b/drivers/net/vmxnet3/vmxnet3_drv.c
@@ -662,7 +662,7 @@ vmxnet3_append_frag(struct sk_buff *skb,
 }
 
 
-static void
+static int
 vmxnet3_map_pkt(struct sk_buff *skb, struct vmxnet3_tx_ctx *ctx,
 		struct vmxnet3_tx_queue *tq, struct pci_dev *pdev,
 		struct vmxnet3_adapter *adapter)
@@ -722,6 +722,8 @@ vmxnet3_map_pkt(struct sk_buff *skb, str
 		tbi->dma_addr = pci_map_single(adapter->pdev,
 				skb->data + buf_offset, buf_size,
 				PCI_DMA_TODEVICE);
+		if (pci_dma_mapping_error(adapter->pdev, tbi->dma_addr))
+			return -EFAULT;
 
 		tbi->len = buf_size;
 
@@ -751,6 +753,8 @@ vmxnet3_map_pkt(struct sk_buff *skb, str
 		tbi->dma_addr = pci_map_page(adapter->pdev, frag->page,
 					     frag->page_offset, frag->size,
 					     PCI_DMA_TODEVICE);
+		if (pci_dma_mapping_error(adapter->pdev, tbi->dma_addr))
+			return -EFAULT;
 
 		tbi->len = frag->size;
 
@@ -774,6 +778,8 @@ vmxnet3_map_pkt(struct sk_buff *skb, str
 	/* set the last buf_info for the pkt */
 	tbi->skb = skb;
 	tbi->sop_idx = ctx->sop_txd - tq->tx_ring.base;
+
+	return 0;
 }
 
 
@@ -991,7 +997,8 @@ vmxnet3_tq_xmit(struct sk_buff *skb, str
 	}
 
 	/* fill tx descs related to addr & len */
-	vmxnet3_map_pkt(skb, &ctx, tq, adapter->pdev, adapter);
+	if (vmxnet3_map_pkt(skb, &ctx, tq, adapter->pdev, adapter))
+		goto unlock_drop_pkt;
 
 	/* setup the EOP desc */
 	ctx.eop_txd->dword[3] = cpu_to_le32(VMXNET3_TXD_CQ | VMXNET3_TXD_EOP);
