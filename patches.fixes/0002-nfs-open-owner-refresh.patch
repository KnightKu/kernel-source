From: NeilBrown <neilb@suse.com>
Date: Fri, 3 Jun 2016 14:58:02 +1000
Subject: [PATCH] NFS: Refresh open-owner id when server says SEQID is bad
References: bsc#989261
Patch-mainline: Not yet, no response from maintainer for require precursor

If the server returns NFS4ERR_BAD_SEQID, we need to stop using that
open-owner and create a new one.
We already mark it invalid so a new open will create a new open-owner.
However existing opens might still try to us the open-owner and so
get the same error.  This is particularly an issue for delegation recall.

This patch replaces the open-owner id for the bad owner so if it does
get reused, the server won't recognize it and will request an OPEN_CONFIRM
to validate it.

Signed-off-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/nfs4state.c |    9 +++++++++
 1 file changed, 9 insertions(+)

--- a/fs/nfs/nfs4state.c
+++ b/fs/nfs/nfs4state.c
@@ -473,7 +473,16 @@ nfs4_alloc_state_owner(void)
 static void
 nfs4_drop_state_owner(struct nfs4_state_owner *sp)
 {
+	struct nfs_client *clp = sp->so_server->nfs_client;
+	spin_lock(&clp->cl_lock);
 	set_bit(NFS_OWNER_STALE, &sp->so_flags);
+	/* delegation recall might insist on using this owner-owner,
+	 * so reset it so that a new 'confirm' stage is initiated
+	 */
+	nfs_free_unique_id(&sp->so_server->openowner_id, &sp->so_owner_id);
+	nfs_alloc_unique_id_locked(&sp->so_server->openowner_id,
+				   &sp->so_owner_id, 1, 64);
+	spin_unlock(&clp->cl_lock);
 }
 
 /**
