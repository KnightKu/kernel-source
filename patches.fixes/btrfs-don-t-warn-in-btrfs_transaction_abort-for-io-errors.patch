From: Chris Mason <clm@fb.com>
Subject: Btrfs: don't WARN() in btrfs_transaction_abort() for IO errors
Git-commit: e5d6b12fe14e89ea1c494585c47b1dfb31d71183
Patch-mainline: v4.10-rc1
References: bsc#1080363

btrfs_transaction_abort() has a WARN() to help us nail down whatever
problem lead to the abort.  But most of the time, we're aborting for EIO,
and the warning just adds noise.

Signed-off-by: Chris Mason <clm@fb.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/btrfs/super.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@ -251,8 +251,12 @@ void __btrfs_abort_transaction(struct bt
 	 */
 	if (!test_and_set_bit(BTRFS_FS_STATE_TRANS_ABORTED,
 				&root->fs_info->fs_state)) {
-		WARN(1, KERN_DEBUG "btrfs: Transaction aborted (error %d)\n",
-				errno);
+		if (errno != -EIO)
+			WARN(1, KERN_DEBUG "btrfs: Transaction aborted (error %d)\n",
+					errno);
+		else
+			pr_debug("btrfs: Transaction aborted (error %d)\n",
+				 errno);
 	}
 	trans->aborted = errno;
 	/* Nothing used. The other threads that have joined this
