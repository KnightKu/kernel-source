From: Mike Snitzer <snitzer@redhat.com>
Date: Tue, 13 Sep 2011 10:22:34 -0400
Subject: dm mpath: never re-queue request if I_T_L nexus failure and no paths
References: bnc#717848
Patch-Mainline: Submitted to dm-devel

Commit 751b2a7d (dm mpath: propagate target errors immediately) intended
to prevent request re-queue if I_T_L nexus failure and no paths are
available.

However, !m->queue_if_no_path does not imply !__must_push_back(m) so it
is possible that an -EBADE failure will result in requeue if
queue_if_no_path was previously enabled (but currently
!m->queue_if_no_path) and __must_push_back(m).

Fix this so requests that fail with -EBADE will never be re-queued.
Return -EIO if queue_if_no_path was really not enabled, otherwise if
queueing is enabled return -EBADE.

Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 drivers/md/dm-mpath.c |   11 ++++-------
 1 files changed, 4 insertions(+), 7 deletions(-)

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index 6decee9..7294644 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -1362,13 +1362,10 @@ static int do_end_io(struct multipath *m, struct request *clone,
 
 	spin_lock_irqsave(&m->lock, flags);
 	if (!m->nr_valid_paths) {
-		if (!m->queue_if_no_path) {
-			if (!__must_push_back(m))
-				r = -EIO;
-		} else {
-			if (error == -EBADE)
-				r = error;
-		}
+		if (!m->queue_if_no_path && !__must_push_back(m))
+			r = -EIO;
+		else if (error == -EBADE)
+			r = error;
 	}
 	spin_unlock_irqrestore(&m->lock, flags);
 
-- 
1.6.0.2

