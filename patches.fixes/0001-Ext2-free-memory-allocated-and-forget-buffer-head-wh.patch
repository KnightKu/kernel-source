From 9257270fc2e54121732bbe431e0dbc5c24fcccaf Mon Sep 17 00:00:00 2001
From: Wang Shilong <wangsl-fnst@cn.fujitsu.com>
Date: Sat, 12 Jan 2013 01:19:32 -0800
References: bnc#1069508
Subject: [PATCH 1/6] Ext2: free memory allocated and forget buffer head when
 io error happens
Patch-mainline: v3.8
Git-commit: 8d8759eb488f9e88fa5f976c4fd7ed205661c872

Add a necessary check when an io error happens.
If io error happens,free the memory allocated and forget
buffer head.

Signed-off-by: Wang Shilong <wangsl-fnst@cn.fujitsu.com>
Signed-off-by: Jan Kara <jack@suse.cz>
---
 fs/ext2/inode.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/fs/ext2/inode.c b/fs/ext2/inode.c
index 8cdd833..61f85ea 100644
--- a/fs/ext2/inode.c
+++ b/fs/ext2/inode.c
@@ -497,6 +497,10 @@ static int ext2_alloc_branch(struct inode *inode,
 		 * parent to disk.
 		 */
 		bh = sb_getblk(inode->i_sb, new_blocks[n-1]);
+		if (unlikely(!bh)) {
+			err = -ENOMEM;
+			goto failed;
+		}
 		branch[n].bh = bh;
 		lock_buffer(bh);
 		memset(bh->b_data, 0, blocksize);
@@ -525,6 +529,14 @@ static int ext2_alloc_branch(struct inode *inode,
 	}
 	*blks = num;
 	return err;
+
+failed:
+	for (i = 1; i < n; i++)
+		bforget(branch[i].bh);
+	for (i = 0; i < indirect_blks; i++)
+		ext2_free_blocks(inode, new_blocks[i], 1);
+	ext2_free_blocks(inode, new_blocks[i], num);
+	return err;
 }
 
 /**
-- 
1.7.12.4

