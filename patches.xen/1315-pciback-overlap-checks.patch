From http://xenbits.xen.org/hg/linux-2.6.18-xen.hg/rev/200d580e141c
From: xen-devel@lists.xenproject.org
Patch-mainline: Never, SUSE-Xen specific
Subject: pciback: fix conf_space read/write overlap check

Current overlap check is evaluating to false a case where a filter field
is fully contained (proper subset) of a r/w request.
This change applies classical overlap check instead to include
all the scenarios.

More specifically, for (Hilscher GmbH CIFX 50E-DP(M/S)) device
driver the logic is such that the entire confspace is read and
written in 4 byte chunks.In this case as an example, CACHE_LINE_SIZE,
LATENCY_TIMER and PCI_BIST are arriving together in one call to
xen_pcibk_config_write with offset == 0xc and size == 4.
With the existing overlap check LATENCY_TIMER field
(offset == 0xd, length == 1) is fully contained in the write request
and hence is excluded from write, which is incorrect.

Related to https://www.mail-archive.com/xen-devel@lists.xen.org/msg72174.html

Signed-off-by: Andrey Grodzovsky <andrey2805@gmail.com>
Reviewed-by: Jan Beulich <jbeulich@suse.com>
Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Reviewed-by: David Vrabel <david.vrabel@citrix.com>
Acked-by: Juergen Gross <jgross@suse.com>
Committed-by: Jan Beulich <jbeulich@suse.com>

--- a/drivers/xen/pciback/conf_space.c
+++ b/drivers/xen/pciback/conf_space.c
@@ -179,8 +179,7 @@ int pciback_config_read(struct pci_dev *
 		field_start = OFFSET(cfg_entry);
 		field_end = OFFSET(cfg_entry) + field->size;
 
-		if ((req_start >= field_start && req_start < field_end)
-		    || (req_end > field_start && req_end <= field_end)) {
+		if (req_end > field_start && field_end > req_start) {
 			err = conf_space_read(dev, cfg_entry, field_start,
 					      &tmp_val);
 			if (err)
@@ -226,8 +225,7 @@ int pciback_config_write(struct pci_dev
 		field_start = OFFSET(cfg_entry);
 		field_end = OFFSET(cfg_entry) + field->size;
 
-		if ((req_start >= field_start && req_start < field_end)
-		    || (req_end > field_start && req_end <= field_end)) {
+		if (req_end > field_start && field_end > req_start) {
 			tmp_val = 0;
 
 			err = pciback_config_read(dev, field_start,
