Subject: xen-netfront: fix req_prod check to avoid RX hang when index wraps
From: <ohering@suse.de>
Patch-mainline: Never, this change affects only xenlinux
References: bsc#1046610

If the frontend produced enogh requests and caused req_prod_pvt to
wrap, and if the backend did not consume all of these requests and
sring->req_prod did not wrap yet, a "push to backend" could be missed.
The reason is that an already wrapped value is smaller than a not-yet
wrapped value.
Adjust the comparison to check if req_prod_pvt changed, since
sring->req_prod can not be ahead of req_prod_pvt.
RING_PUSH_REQUESTS_AND_CHECK_NOTIFY will update the value
unconditionally.

--- a/drivers/xen/netfront/netfront.c
+++ b/drivers/xen/netfront/netfront.c
@@ -801,7 +801,7 @@ no_skb:
 
 	/* Is the batch large enough to be worthwhile? */
 	if (i < (np->rx_target/2)) {
-		if (req_prod > np->rx.sring->req_prod)
+		if (req_prod != np->rx.sring->req_prod)
 			goto push;
 		return;
 	}
