From 6549c4736421446a01a61a3caa4d4edabaef4b76 Mon Sep 17 00:00:00 2001
From: Joerg Roedel <jroedel@suse.de>
Date: Tue, 13 Mar 2018 16:07:06 +0100
Subject: [PATCH 03/17] x86/entry/32: Use trampoline stack for kernel entry
References: bsc#1068032 CVE-2017-5754
Patch-mainline: Never, SUSE-Xen specific

Always use the entry-stack to enter the kernel from
user-space and switch to the task-stack manually. Also
switch back to the entry-stack when leaving the kernel back
to user-space.

For that to work, store the task-stack in tss.sp1 which is
otherwise unused on Linux.

Signed-off-by: Joerg Roedel <jroedel@suse.de>

--- a/arch/x86/include/mach-xen/asm/processor.h
+++ b/arch/x86/include/mach-xen/asm/processor.h
@@ -528,11 +528,26 @@ native_load_sp0(struct tss_struct *tss,
 	}
 #endif
 }
+
+#ifdef CONFIG_X86_32
+static inline void
+update_sp0(struct tss_struct *tss, struct thread_struct *thread)
+{
+	tss->x86_tss.sp1 = thread->sp0;
+
+	/* Only happens when SEP is enabled, no need to test "SEP"arately: */
+	if (unlikely(tss->x86_tss.ss1 != thread->sysenter_cs)) {
+		tss->x86_tss.ss1 = thread->sysenter_cs;
+		wrmsr(MSR_IA32_SYSENTER_CS, thread->sysenter_cs, 0);
+	}
+}
+#endif
 #else
 #define xen_load_sp0(tss, thread) do { \
 	if (HYPERVISOR_stack_switch(__KERNEL_DS, (thread)->sp0)) \
 		BUG(); \
 } while (0)
+#define update_sp0 xen_load_sp0
 #endif
 
 #define __cpuid			xen_cpuid
