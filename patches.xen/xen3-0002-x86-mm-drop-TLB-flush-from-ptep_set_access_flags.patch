From 320176c8644191e8440456a32cc2c2c8fd97b15e Mon Sep 17 00:00:00 2001
From: Rik van Riel <riel@redhat.com>
Date: Tue, 6 Nov 2012 09:55:18 +0000
Patch-mainline: Never, SUSE-Xen specific
References: bsc#948330
Subject: [PATCH 2/2] xen: x86: mm: drop TLB flush from ptep_set_access_flags

Intel has an architectural guarantee that the TLB entry causing
a page fault gets invalidated automatically. This means
we should be able to drop the local TLB invalidation.

Because of the way other areas of the page fault code work,
chances are good that all x86 CPUs do this.  However, if
someone somewhere has an x86 CPU that does not invalidate
the TLB entry causing a page fault, this one-liner should
be easy to revert.

Signed-off-by: Rik van Riel <riel@redhat.com>
Cc: Linus Torvalds <torvalds@kernel.org>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Michel Lespinasse <walken@google.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Ingo Molnar <mingo@redhat.com>
Signed-off-by: Ales Novak <alnovak@suse.cz>
Automatically created from "patches.fixes/0002-x86-mm-drop-TLB-flush-from-ptep_set_access_flags.patch" by xen-port-patches.py

--- a/arch/x86/mm/pgtable-xen.c
+++ b/arch/x86/mm/pgtable-xen.c
@@ -728,11 +728,10 @@ int ptep_set_access_flags(struct vm_area
 	if (changed && dirty) {
 		if (likely(vma->vm_mm == current->mm)) {
 			if (HYPERVISOR_update_va_mapping(address, entry,
-							 UVMF_INVLPG))
+							 UVMF_NONE))
 				BUG();
 		} else {
 			xen_l1_entry_update(ptep, entry);
-			__flush_tlb_one(address);
 		}
 	}
 
