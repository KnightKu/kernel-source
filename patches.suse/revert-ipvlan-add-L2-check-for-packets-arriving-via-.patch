From: Mahesh Bandewar <maheshb@google.com>
Date: Wed, 13 Dec 2017 14:40:23 -0800
Subject: Revert "ipvlan: add L2 check for packets arriving via virtual
 devices"
Git-commit: 918150cbd6103199fe326e8b1462a7f0d81475e4
Patch-mainline: v4.16-rc1
References: reverted in upstream

This reverts commit 92ff42645028fa6f9b8aa767718457b9264316b4.

Even though the check added is not that taxing, it's not really needed.
First of all this will be per packet cost and second thing is that the
eth_type_trans() already does this correctly. The excessive scrubbing
in IPvlan was changing the pkt-type skb metadata of the packet which
made it necessary to re-check the mac. The subsequent patch in this
series removes the faulty packet-scrub.

Signed-off-by: Mahesh Bandewar <maheshb@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/net/ipvlan/ipvlan_core.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/drivers/net/ipvlan/ipvlan_core.c b/drivers/net/ipvlan/ipvlan_core.c
index 0bc7f721b717..9774c96ac7bb 100644
--- a/drivers/net/ipvlan/ipvlan_core.c
+++ b/drivers/net/ipvlan/ipvlan_core.c
@@ -322,10 +322,6 @@ static int ipvlan_rcv_frame(struct ipvl_addr *addr, struct sk_buff **pskb,
 		if (dev_forward_skb(ipvlan->dev, skb) == NET_RX_SUCCESS)
 			success = true;
 	} else {
-		if (!ether_addr_equal_64bits(eth_hdr(skb)->h_dest,
-					     ipvlan->phy_dev->dev_addr))
-			skb->pkt_type = PACKET_OTHERHOST;
-
 		ret = RX_HANDLER_ANOTHER;
 		success = true;
 	}
-- 
2.16.2

