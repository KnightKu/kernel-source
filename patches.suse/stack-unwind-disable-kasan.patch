Subject: Disable KASAN for stack unwinder code
From: Jiri Slaby <jslaby@suse.cz>
Patch-mainline: no, depends on stack unwinder

When KASAN is instrumented into unwinder code, it takes ages to boot
the kernel. save_stack is called when allocating memory and it indeed
propagates to the unwinder code. So disable KASAN on unwind.c and
mm/maccess.c (for probe_kernel_address). The same is done for
dumpstack*.c by upstream.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/Makefile |    2 ++
 mm/Makefile     |    1 +
 2 files changed, 3 insertions(+)

--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -19,6 +19,8 @@ CFLAGS_REMOVE_cgroup-debug.o = $(CC_FLAG
 CFLAGS_REMOVE_irq_work.o = $(CC_FLAGS_FTRACE)
 endif
 
+KASAN_SANITIZE_unwind.o := n
+
 # cond_syscall is currently not LTO compatible
 CFLAGS_sys_ni.o = $(DISABLE_LTO)
 
--- a/mm/Makefile
+++ b/mm/Makefile
@@ -4,6 +4,7 @@
 
 KASAN_SANITIZE_slab_common.o := n
 KASAN_SANITIZE_slub.o := n
+KASAN_SANITIZE_maccess.o := n
 
 mmu-y			:= nommu.o
 mmu-$(CONFIG_MMU)	:= gup.o highmem.o memory.o mincore.o \
