From: Jan Kara <jack@suse.cz>
Subject: [PATCH] xfs: Avoid grabbing ilock when file size is not changed
Patch-mainline: Never, code got rewritten
References: bsc#983535

When we complete IO in xfs_end_io(), we unconditionally call xfs_setfilesize()
which grabs ilock and checks whether inode size needs to be updated. However
we can do an opportunistic check whether we need to update inode size before
grabbing ilock and thus safe some contention on that lock. The check is safe
because truncate waits for all outstanding IO to complete and thus we know
inode size cannot decrease while xfs_end_io() is running. Further confidence
the check is safe comes from the fact that we do the same check when
completing AIO.

Signed-off-by: Jan Kara <jack@suse.cz>

---
 fs/xfs/linux-2.6/xfs_aops.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/fs/xfs/linux-2.6/xfs_aops.c
+++ b/fs/xfs/linux-2.6/xfs_aops.c
@@ -245,7 +245,8 @@ xfs_end_io(
 	 * We might have to update the on-disk file size after extending
 	 * writes.
 	 */
-	xfs_setfilesize(ioend);
+	if (ioend->io_type != IO_DIRECT || xfs_ioend_is_append(ioend))
+		xfs_setfilesize(ioend);
 
 done:
 	if (ioend->io_iocb)
