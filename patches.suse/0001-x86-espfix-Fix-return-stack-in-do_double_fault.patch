From 001731977685ec070ac5f42d527ae2f03c55e5ad Mon Sep 17 00:00:00 2001
From: Joerg Roedel <jroedel@suse.de>
Date: Wed, 14 Mar 2018 19:46:35 +0100
Subject: [PATCH] x86/espfix: Fix return stack in do_double_fault()
Patch-mainline: never, different implementation
References: bsc#1085279

With PTI enabled we need to return to the entry stack from
the double-fault handler, otherwise we end up in
general_protection with user-cr3 and the task-stack in %rsp.
The task-stack is not mapped in the user-cr3, so the first
write to the stack will cause another double-fault and crash
the machine.

Signed-off-by: Joerg Roedel <jroedel@suse.de>
---
 arch/x86/kernel/traps.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -246,7 +246,7 @@ dotraplinkage void do_double_fault(struc
 		regs->cs == __KERNEL_CS &&
 		regs->ip == (unsigned long)native_irq_return_iret)
 	{
-		struct pt_regs *normal_regs = task_pt_regs(current);
+		struct pt_regs *normal_regs = (struct pt_regs *)this_cpu_read(init_tss.x86_tss.sp0) - 1;
 
 		/* Fake a #GP(0) from userspace. */
 		memmove(&normal_regs->ip, (void *)regs->sp, 5*8);
