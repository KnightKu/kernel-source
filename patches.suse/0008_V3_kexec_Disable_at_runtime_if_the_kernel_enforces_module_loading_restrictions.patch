From: Matthew Garrett <matthew.garrett@nebula.com>
Subject: [PATCH V3 08/11] kexec: Disable at runtime if the kernel enforces module loading restrictions
Date: Tue,  3 Sep 2013 19:50:15 -0400

Patch-mainline: Not yet, fedora 20
References: fate#314486
Target: SLE-12

kexec permits the loading and execution of arbitrary code in ring 0, which
is something that module signing enforcement is meant to prevent. It makes
sense to disable kexec in this situation.

Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
Acked-by: Lee, Chun-Yi <jlee@suse.com>

---
 kernel/kexec.c | 8 ++++++++
 1 file changed, 8 insertions(+)

--- a/kernel/kexec.c
+++ b/kernel/kexec.c
@@ -34,6 +34,7 @@
 #include <linux/swap.h>
 #include <linux/syscore_ops.h>
 #include <linux/hugetlb.h>
+#include <linux/module.h>
 
 #include <asm/page.h>
 #include <asm/uaccess.h>
@@ -1243,6 +1244,13 @@ SYSCALL_DEFINE4(kexec_load, unsigned lon
 		return -EPERM;
 
 	/*
+	 * kexec can be used to circumvent module loading restrictions, so
+	 * prevent loading in that case
+	 */
+	if (secure_modules())
+		return -EPERM;
+
+	/*
 	 * Verify we have a legal set of flags
 	 * This leaves us room for future extensions.
 	 */
@@ -1380,6 +1388,15 @@ SYSCALL_DEFINE5(kexec_file_load, int, ke
 	int ret = 0, i;
 	struct kimage **dest_image, *image;
 
+#ifndef CONFIG_KEXEC_VERIFY_SIG
+	/*
+	 * Don't permit images to be loaded into trusted kernels if we're not
+	 * going to verify the signature on them
+	 */
+	if (secure_modules())
+		return -EPERM;
+#endif
+
 	/* We only trust the superuser with rebooting the system. */
 	if (!capable(CAP_SYS_BOOT) || kexec_load_disabled)
 		return -EPERM;
