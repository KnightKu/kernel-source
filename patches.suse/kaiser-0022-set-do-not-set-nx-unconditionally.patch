From: Jiri Kosina <jkosina@suse.cz>
Subject: [PATCH] x86/kaiser: Populate shadow PGD with NX bit only if supported by platform
Patch-mainline: No, fixed differently as part of PTI PGD poisoning code
References: bsc#1076154 bsc#1076278

According to Intel SDM, usage of reserved bits should be ignored. However, AMD
documentation is more strict, and prescribes pagefault with PF_RSVD errorcode
to happen whenever reserved bit set anywhere in the paging hierarchy.

Indeed on old systems (and with some hypervisors likely sticking to AMD semantics)
this might happen during early boot:

	init: Corrupted page table at address 68f084
	PGD 80000001b7bde067 PUD 1b7bdd067 PMD 1b7bf3067 PTE 1cf9b9067
	Bad pagetable: 000b [#1] SMP

when constructing ELF data structures for init binary here:

	[<ffffffff811b006e>] load_elf_binary+0xdee/0x1080
	[<ffffffff81168a9d>] search_binary_handler+0x20d/0x310
	[<ffffffff811acc7d>] load_script+0x22d/0x280
	[<ffffffff81168a9d>] search_binary_handler+0x20d/0x310
	[<ffffffff81168df1>] do_execve_common+0x251/0x300
	[<ffffffff8100aa89>] sys_execve+0x49/0x80
	[<ffffffff81478358>] kernel_execve+0x68/0xd0

	RIP  [<ffffffff8126c589>] clear_user+0x39/0x60

So this apparently triggers on combinations of non-NX hardware and
hypervisors that adopted the AMD semantics.

Make sure that we are always using the NX bit trick only when it's supported
by underlying platform.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/mm/kaiser.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/arch/x86/mm/kaiser.c
+++ b/arch/x86/mm/kaiser.c
@@ -396,7 +396,8 @@ pgd_t kaiser_set_shadow_pgd(pgd_t *pgdp,
 			 * get out to userspace running on the kernel CR3,
 			 * userspace will crash instead of running.
 			 */
-			pgd.pgd |= _PAGE_NX;
+			if (__supported_pte_mask & _PAGE_NX)
+				pgd.pgd |= _PAGE_NX;
 		}
 	} else if (!pgd.pgd) {
 		/*

