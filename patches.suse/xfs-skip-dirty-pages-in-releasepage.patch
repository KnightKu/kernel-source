From: Mark Fasheh <mfasheh@suse.de>
Date: Thu Apr  9 14:14:53 PDT 2015
Subject: xfs: Skip dirty pages in ->releasepage
References: bnc#912738, bnc#915183
Patch-mainline: Never

XFS can not handle dirty pages in xfs_vm_releasepage(). Normally this
is not a problem as most callers of try_to_release_page() do writeout
of dirty pages before releaseing them. However, we can (rarely) get
called from shrink_active_list() which does *not* do writeout before
releasepage. XFS handles this correctly by returning 0 when it sees
delalloc buffers on the page, but it produces an ugly warning every
time this happens. We don't want to remove the warning because it has
helped find bugs before, but we also clearly can't continue to warn
when this happens.

So catch a dirty page in xfs_vm_releasepage() and bail out correctly
before we hit any of the code paths that will trigger a warning. That
way, if the page is clean, the warnings will get printed and we'll
know something is wrong. If it's dirty, then we're doing the best we
can anyway by telling the caller that they can't remove the page.

Signed-off-by: Mark Fasheh <mfasheh@suse.de>


--- a/fs/xfs/linux-2.6/xfs_aops.c
+++ b/fs/xfs/linux-2.6/xfs_aops.c
@@ -1125,6 +1125,9 @@ xfs_vm_releasepage(
 
 	trace_xfs_releasepage(page->mapping->host, page, 0);
 
+	if (PageDirty(page))
+		return 0;
+
 	xfs_count_page_state(page, &delalloc, &unwritten);
 
 	if (WARN_ON(delalloc))
