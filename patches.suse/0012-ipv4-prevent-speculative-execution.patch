From: Elena Reshetova <elena.reshetova@intel.com>
Date: Wed, 13 Dec 2017 10:16:07 +0200
Subject: ipv4: prevent speculative execution
Patch-mainline: submitted on 2018/1/9
References: bsc#1068032 CVE-2017-5753

Since the offset value in function raw_getfrag()
seems to be controllable by userspace and later on
conditionally (upon bound check) used in the following
memcpy, insert an observable speculation
barrier before its usage. This should prevent
observable speculation on that branch and avoid
kernel memory leak.

Signed-off-by: Elena Reshetova <elena.reshetova@intel.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 net/ipv4/raw.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/net/ipv4/raw.c b/net/ipv4/raw.c
index bdffad875691..00edf3ea64d8 100644
--- a/net/ipv4/raw.c
+++ b/net/ipv4/raw.c
@@ -470,6 +470,7 @@ static int raw_getfrag(void *from, char *to, int offset, int len, int odd,
 	if (offset < rfv->hlen) {
 		int copy = min(rfv->hlen - offset, len);
 
+		osb();
 		if (skb->ip_summed == CHECKSUM_PARTIAL)
 			memcpy(to, rfv->hdr.c + offset, copy);
 		else
-- 
2.15.1

