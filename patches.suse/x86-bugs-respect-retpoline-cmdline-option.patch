From: Borislav Petkov <bp@suse.de>
Subject: x86/bugs: Respect retpoline command line option
Patch-mainline: no, SUSE-specific
References: bsc#1068032

... and disable IBRS if enabled. Booting with "=retpoline..." on the kernel
command line enables retpolines but does not disable IBRS. This is not a problem
upstream because there we don't have IBRS but SUSE kernels do so we need to
respect the retpoline requested on the kernel command line.

Signed-off-by: Borislav Petkov <bp@suse.de>
---
diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
index 803740d790cd..47cd3dd40608 100644
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -201,6 +201,16 @@ static enum spectre_v2_mitigation_cmd __init spectre_v2_parse_cmdline(void)
 	else
 		spec2_print_if_insecure(mitigation_options[i].option);
 
+	/* Disable IBRS when retpoline has been selected: */
+	if (cmd == SPECTRE_V2_CMD_RETPOLINE ||
+	    cmd == SPECTRE_V2_CMD_RETPOLINE_AMD ||
+	    cmd == SPECTRE_V2_CMD_RETPOLINE_GENERIC) {
+		if (x86_ibrs_enabled()) {
+			pr_err("disabling IBRS, retpolines selected by user\n");
+			ibrs_state = 0;
+		}
+	}
+
 	return cmd;
 }
 
diff --git a/arch/x86/kernel/cpu/spec_ctrl.c b/arch/x86/kernel/cpu/spec_ctrl.c
index 7f74bbfb1daf..d75c6d273836 100644
--- a/arch/x86/kernel/cpu/spec_ctrl.c
+++ b/arch/x86/kernel/cpu/spec_ctrl.c
@@ -20,17 +20,13 @@ static int ibpb_state = -1;
 
 unsigned int notrace x86_ibrs_enabled(void)
 {
-	if (ibrs_state != 1)
-		return 0;
-	return 1;
+	return ibrs_state == 1;
 }
 EXPORT_SYMBOL_GPL(x86_ibrs_enabled);
 
 unsigned int notrace x86_ibpb_enabled(void)
 {
-	if (ibpb_state != 1)
-		return 0;
-	return 1;
+	return ibpb_state == 1;
 }
 EXPORT_SYMBOL_GPL(x86_ibpb_enabled);
 
