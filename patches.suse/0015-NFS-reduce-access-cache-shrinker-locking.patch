From: NeilBrown <neilb@suse.com>
Subject: NFS: reduce access cache shrinker locking
Patch-mainline: never, code has changed in 3.12 to not need this.
References: bnc#866130

When nr_to_scan is zero there is no need to take this spin-lock.
---
 fs/nfs/dir.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@ -2173,6 +2173,8 @@ int nfs_access_cache_shrinker(struct shr
 	if ((gfp_mask & GFP_KERNEL) != GFP_KERNEL)
 		return (nr_to_scan == 0) ? 0 : -1;
 
+	if (nr_to_scan == 0)
+		return (atomic_long_read(&nfs_access_nr_entries) / 100) * sysctl_vfs_cache_pressure;
 	spin_lock(&nfs_access_lru_lock);
 	list_for_each_entry_safe(nfsi, next, &nfs_access_lru_list, access_cache_inode_lru) {
 		struct inode *inode;
