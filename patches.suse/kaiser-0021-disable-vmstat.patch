From: Jiri Kosina <jkosina@suse.cz>
Subject: x86/kaiser: disable vmstat accounting

This is debugging facility, and is unnecessary kABI hazard.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/mm/kaiser.c   |   13 ++++---------
 include/linux/mmzone.h |    3 +--
 mm/vmstat.c            |    1 -
 3 files changed, 5 insertions(+), 12 deletions(-)

--- a/arch/x86/mm/kaiser.c
+++ b/arch/x86/mm/kaiser.c
@@ -135,11 +135,9 @@ static pte_t *kaiser_pagetable_walk(unsi
 		if (!new_pmd_page)
 			return NULL;
 		spin_lock(&shadow_table_allocation_lock);
-		if (pud_none(*pud)) {
+		if (pud_none(*pud))
 			set_pud(pud, __pud(_PAGE_TABLE | __pa(new_pmd_page)));
-			__inc_zone_page_state(virt_to_page((void *)
-						new_pmd_page), NR_KAISERTABLE);
-		} else
+		else
 			free_page(new_pmd_page);
 		spin_unlock(&shadow_table_allocation_lock);
 	}
@@ -155,11 +153,9 @@ static pte_t *kaiser_pagetable_walk(unsi
 		if (!new_pte_page)
 			return NULL;
 		spin_lock(&shadow_table_allocation_lock);
-		if (pmd_none(*pmd)) {
+		if (pmd_none(*pmd))
 			set_pmd(pmd, __pmd(_PAGE_TABLE | __pa(new_pte_page)));
-			__inc_zone_page_state(virt_to_page((void *)
-						new_pte_page), NR_KAISERTABLE);
-		} else
+		else
 			free_page(new_pte_page);
 		spin_unlock(&shadow_table_allocation_lock);
 	}
@@ -232,7 +228,6 @@ static void __init kaiser_init_all_pgds(
 			WARN_ON(1);
 			break;
 		}
-		inc_zone_page_state(virt_to_page(pud), NR_KAISERTABLE);
 		new_pgd = __pgd(_PAGE_TABLE |__pa(pud));
 		/*
 		 * Make sure not to stomp on some other pgd entry.
--- a/include/linux/mmzone.h
+++ b/include/linux/mmzone.h
@@ -95,9 +95,8 @@ enum zone_stat_item {
 	NR_SLAB_RECLAIMABLE,
 	NR_SLAB_UNRECLAIMABLE,
 	NR_PAGETABLE,		/* used for pagetables */
-	/* Second 128 byte cacheline */
 	NR_KERNEL_STACK,
-	NR_KAISERTABLE,
+	/* Second 128 byte cacheline */
 	NR_UNSTABLE_NFS,	/* NFS unstable pages */
 	NR_BOUNCE,
 	NR_VMSCAN_WRITE,
--- a/mm/vmstat.c
+++ b/mm/vmstat.c
@@ -699,7 +699,6 @@ const char * const vmstat_text[] = {
 	"nr_slab_unreclaimable",
 	"nr_page_table_pages",
 	"nr_kernel_stack",
-	"nr_overhead",
 	"nr_unstable",
 	"nr_bounce",
 	"nr_vmscan_write",
