From: Elena Reshetova <elena.reshetova@intel.com>
Date: Fri, 15 Dec 2017 02:29:09 -0800
Subject: userns: prevent speculative execution
Patch-mainline: submitted on 2018/1/9
References: bsc#1068032 CVE-2017-5753

Since the pos value in function m_start()
seems to be controllable by userspace and later on
conditionally (upon bound check) used to resolve
map->extent, insert an observable speculation
barrier before its usage. This should prevent
observable speculation on that branch and avoid
kernel memory leak.

Signed-off-by: Elena Reshetova <elena.reshetova@intel.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/user_namespace.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/kernel/user_namespace.c b/kernel/user_namespace.c
index 2f735cbe05e8..5676ff356eca 100644
--- a/kernel/user_namespace.c
+++ b/kernel/user_namespace.c
@@ -543,8 +543,10 @@ static void *m_start(struct seq_file *seq, loff_t *ppos,
 	struct uid_gid_extent *extent = NULL;
 	loff_t pos = *ppos;
 
-	if (pos < map->nr_extents)
+	if (pos < map->nr_extents) {
+		osb();
 		extent = &map->extent[pos];
+	}
 
 	return extent;
 }
-- 
2.15.1

