From: Michal Hocko <mhocko@suse.cz>
Subject: mm-memcg-print-statistics-from-live-counters-fix
Patch-mainline: never, suse specific
References: bnc#969307

patches.suse/mm-memcg-print-statistics-from-live-counters.patch silently
depends on 619d094b5872 ("memcg: simplify move_account() check") which has
removed MEM_CGROUP_ON_MOVE and so MEM_CGROUP_STAT_NSTATS and
MEM_CGROUP_STAT_DATA became the same thing. We do not have that patch
backported and so any loop over all MEM_CGROUP_STAT_NSTATS and access
mem_cgroup_stat_names will touch outside of the array.

Fix this by using MEM_CGROUP_STAT_DATA when we have to access
mem_cgroup_stat_names.

Signed-off-by: Michal Hocko <mhocko@suse.cz>

---
 mm/memcontrol.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -1451,7 +1451,7 @@ done:
 		rcu_read_unlock();
 		pr_cont(":");
 
-		for (i = 0; i < MEM_CGROUP_STAT_NSTATS; i++) {
+		for (i = 0; i < MEM_CGROUP_STAT_DATA; i++) {
 			if (i == MEM_CGROUP_STAT_SWAP && !do_swap_account)
 				continue;
 			pr_cont(" %s:%ldKB", mem_cgroup_stat_names[i],
@@ -4229,7 +4229,7 @@ static int mem_control_stat_show(struct
 	struct mem_cgroup *mi;
 	unsigned int i;
 
-	for (i = 0; i < MEM_CGROUP_STAT_NSTATS; i++) {
+	for (i = 0; i < MEM_CGROUP_STAT_DATA; i++) {
 		if (i == MEM_CGROUP_STAT_SWAP && !do_swap_account)
 			continue;
 		seq_printf(m, "%s %ld\n", mem_cgroup_stat_names[i],
@@ -4254,7 +4254,7 @@ static int mem_control_stat_show(struct
 				   memsw_limit);
 	}
 
-	for (i = 0; i < MEM_CGROUP_STAT_NSTATS; i++) {
+	for (i = 0; i < MEM_CGROUP_STAT_DATA; i++) {
 		long long val = 0;
 
 		if (i == MEM_CGROUP_STAT_SWAP && !do_swap_account)
