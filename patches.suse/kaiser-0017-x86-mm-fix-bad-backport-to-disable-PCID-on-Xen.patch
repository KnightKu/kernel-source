From 6048713fafc0183f6b9a4671dff81c252385c39b Mon Sep 17 00:00:00 2001
From: Borislav Petkov <bp@alien8.de>
Date: Wed, 6 Dec 2017 22:08:43 +0100
Subject: [PATCH 17/19] x86/mm: fix bad backport to disable PCID on Xen
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

arch/x86/xen/enlighten.c: In function ‘xen_init_cpuid_mask’:
arch/x86/xen/enlighten.c:450:2: warning: left shift count >= width of type
  cpuid_leaf1_ecx_mask &= ~(1 << X86_FEATURE_PCID);  /* disable PCID */

That hunk in xen_init_cpuid_mask() should be like below because those
X86_FEATURE* things are bits in an u32 array.

X86_FEATURE_ACC and X86_FEATURE_MTRR work, for example, because they're
the nullth word but they should've been done % 32 anyway just to be
consistent when converting cap bits into CPUID bits.
---
 arch/x86/xen/enlighten.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/x86/xen/enlighten.c
+++ b/arch/x86/xen/enlighten.c
@@ -274,7 +274,7 @@ static void __init xen_init_cpuid_mask(v
 	 * Xen PV would need some work to support PCID: CR3 handling as well
 	 * as xen_flush_tlb_others() would need updating.
 	 */
-	cpuid_leaf1_ecx_mask &= ~(1 << X86_FEATURE_PCID);  /* disable PCID */
+	cpuid_leaf1_ecx_mask &= ~(1 << (X86_FEATURE_PCID % 32));  /* disable PCID */
 
 	if (!xen_initial_domain())
 		cpuid_leaf1_edx_mask &=
