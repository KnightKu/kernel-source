From: Stephane Eranian <eranian@google.com>
Date: Tue, 16 Aug 2016 16:09:49 -0400
Subject: perf/x86/intel/uncore: Handle non-standard counter offset
Git-commit: 24cf84672e0a1e0d13f3894b60cd820a0140342a
Patch-mainline: v4.9-rc1
References: FATE#319705
Signed-off-by: Tony Jones <tonyj@suse.de>

    [suse: adjust for context, no 6bcb2db547be8263a98ae9413127df9385b38763
     perf/x86: Move perf_event_intel_uncore.[ch] .. => 
        x86/events/intel/uncore.[ch]
    ]

    perf/x86/intel/uncore: Handle non-standard counter offset
    
    The offset of the counters for UPI and M2M boxes on Skylake server is
    non-standard (8 bytes apart).
    
    This patch introduces a custom flag UNCORE_BOX_FLAG_CTL_OFFS8 to
    specially handle it.
    
    Signed-off-by: Stephane Eranian <eranian@google.com>
    Signed-off-by: Kan Liang <kan.liang@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/1471378190-17276-2-git-send-email-kan.liang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

---
 arch/x86/kernel/cpu/perf_event_intel_uncore.h |    4 ++++
 1 file changed, 4 insertions(+)

--- a/arch/x86/kernel/cpu/perf_event_intel_uncore.h
+++ b/arch/x86/kernel/cpu/perf_event_intel_uncore.h
@@ -119,6 +119,7 @@ struct intel_uncore_box {
 };
 
 #define UNCORE_BOX_FLAG_INITIATED	0
+#define UNCORE_BOX_FLAG_CTL_OFFS8	1 /* event config registers are 8-byte apart */
 
 struct uncore_event_desc {
 	struct kobj_attribute attr;
@@ -171,6 +172,9 @@ static inline unsigned uncore_pci_fixed_
 static inline
 unsigned uncore_pci_event_ctl(struct intel_uncore_box *box, int idx)
 {
+	if (test_bit(UNCORE_BOX_FLAG_CTL_OFFS8, &box->flags))
+		return idx * 8 + box->pmu->type->event_ctl;
+
 	return idx * 4 + box->pmu->type->event_ctl;
 }
 
