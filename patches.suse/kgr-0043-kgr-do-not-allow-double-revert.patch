From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 3 Nov 2014 16:56:46 +0100
Subject: kgr: do not allow double revert
Patch-mainline: submitted for review
References: fate#313296 bnc#901169

Double revert results in an oops when we try to remove a patch from
the "applied" list twice. Fix it by deleting with _init and testing
list_empty. If it is empty, return EINVAL.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/kgraft.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/kernel/kgraft.c b/kernel/kgraft.c
index 092d419459de..ca42674f1783 100644
--- a/kernel/kgraft.c
+++ b/kernel/kgraft.c
@@ -578,6 +578,12 @@ int kgr_modify_kernel(struct kgr_patch *patch, bool revert, bool force)
 		goto err_unlock;
 	}
 
+	if (revert && list_empty(&patch->list)) {
+		pr_err("kgr: can't patch, this one was already reverted\n");
+		ret = -EINVAL;
+		goto err_unlock;
+	}
+
 	patch->irq_use_new = alloc_percpu(bool);
 	if (!patch->irq_use_new) {
 		pr_err("kgr: can't patch, cannot allocate percpu data\n");
@@ -616,7 +622,7 @@ int kgr_modify_kernel(struct kgr_patch *patch, bool revert, bool force)
 	kgr_patch = patch;
 	kgr_revert = revert;
 	if (revert)
-		list_del(&kgr_patch->list);
+		list_del_init(&patch->list); /* init for list_empty() above */
 	else if (!patch->replace_all)
 		/* block all older patches if they are not replaced */
 		kgr_refs_inc();
-- 
2.1.3

