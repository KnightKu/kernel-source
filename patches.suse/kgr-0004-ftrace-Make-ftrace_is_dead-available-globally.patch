From: Jiri Slaby <jslaby@suse.cz>
Date: Tue, 22 Apr 2014 20:07:58 +0200
Subject: ftrace: Make ftrace_is_dead available globally
Patch-mainline: not yet, kgraft
References: fate#313296

Kgr wants to test whether ftrace is OK with patching. If not, we just
bail out and will not initialize at all.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Cc: Steven Rostedt <rostedt@goodmis.org>
Cc: Frederic Weisbecker <fweisbec@gmail.com>
Cc: Ingo Molnar <mingo@redhat.com>
---
 include/linux/ftrace.h |    3 +++
 kernel/trace/trace.h   |    2 --
 2 files changed, 3 insertions(+), 2 deletions(-)

--- a/include/linux/ftrace.h
+++ b/include/linux/ftrace.h
@@ -184,6 +184,8 @@ enum ftrace_tracing_type_t {
 /* Current tracing type, default is FTRACE_TYPE_ENTER */
 extern enum ftrace_tracing_type_t ftrace_tracing_type;
 
+extern int ftrace_is_dead(void);
+
 /*
  * The ftrace_ops must be a static and should also
  * be read_mostly.  These functions do modify read_mostly variables
@@ -259,6 +261,7 @@ static inline int ftrace_nr_registered_o
 	return 0;
 }
 static inline void clear_ftrace_function(void) { }
+static inline int ftrace_is_dead(void) { return 0; }
 static inline void ftrace_kill(void) { }
 #endif /* CONFIG_FUNCTION_TRACER */
 
--- a/kernel/trace/trace.h
+++ b/kernel/trace/trace.h
@@ -828,7 +828,6 @@ static inline int ftrace_trace_task(stru
 
 	return test_tsk_trace_trace(task);
 }
-extern int ftrace_is_dead(void);
 int ftrace_create_function_files(struct trace_array *tr,
 				 struct dentry *parent);
 void ftrace_destroy_function_files(struct trace_array *tr);
@@ -841,7 +840,6 @@ static inline int ftrace_trace_task(stru
 {
 	return 1;
 }
-static inline int ftrace_is_dead(void) { return 0; }
 static inline int
 ftrace_create_function_files(struct trace_array *tr,
 			     struct dentry *parent)
