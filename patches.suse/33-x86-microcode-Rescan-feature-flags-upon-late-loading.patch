From: Borislav Petkov <bp@suse.de>
Subject: x86/microcode: Rescan feature flags upon late loading
Patch-mainline: Not yet, under development
References: bsc#1075994 bsc#1075091

... so that /proc/cpuinfo mirrors the proper settings.

Also, carve it out in a separate microcode_check() which is called in
the init path too. See bsc#1088147, where it would install new microcode
on init and not on reload but we would still need to call it then too.

Signed-off-by: Borislav Petkov <bp@suse.de>

---
 arch/x86/kernel/microcode_core.c |   18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

--- a/arch/x86/kernel/microcode_core.c
+++ b/arch/x86/kernel/microcode_core.c
@@ -89,6 +89,8 @@
 #include <asm/perf_event.h>
 #include <asm/spec_ctrl.h>
 
+#include "cpu/cpu.h"
+
 MODULE_DESCRIPTION("Microcode Update Driver");
 MODULE_AUTHOR("Tigran Aivazian <tigran@aivazian.fsnet.co.uk>");
 MODULE_LICENSE("GPL");
@@ -292,6 +294,13 @@ static int reload_for_cpu(int cpu)
 	return err;
 }
 
+static void microcode_check(void)
+{
+	perf_check_microcode();
+	x86_spec_check();
+	cpu_caps_sync_late();
+}
+
 static ssize_t reload_store(struct sys_device *dev,
 			    struct sysdev_attribute *attr,
 			    const char *buf, size_t size)
@@ -322,10 +331,8 @@ static ssize_t reload_store(struct sys_d
 		if (!ret)
 			ret = tmp_ret;
 	}
-	if (!ret) {
-		perf_check_microcode();
-		x86_spec_check();
-	}
+	if (!ret)
+		microcode_check();
 
 	mutex_unlock(&microcode_mutex);
 	put_online_cpus();
@@ -541,7 +548,8 @@ static int __init microcode_init(void)
 
 	error = sysdev_driver_register(&cpu_sysdev_class, &mc_sysdev_driver);
 	if (!error)
-		perf_check_microcode();
+		microcode_check();
+
 	mutex_unlock(&microcode_mutex);
 	put_online_cpus();
 
