From: Jens Axboe <axboe@kernel.dk>
Date: Sun, 14 Jan 2018 10:40:45 -0700
Subject: [PATCH] blk-mq: fix bad clear of RQF_MQ_INFLIGHT in
 blk_mq_ct_ctx_init()
Git-commit: bf9ae8c5325c0070d0ec81a849bba8d156f65993
References: bsc#1085058
Patch-Mainline: v4.16-rc1

A previous commit moved the clearing of rq->rq_flags later,
but we may have already set RQF_MQ_INFLIGHT when that happens.
Ensure that we correctly initialize rq->rq_flags to the
right value.

This is based on an original fix by Ming, just rewritten to not
require a conditional.

[hare: ported to SLE12 SP3]

Fixes: 7c3fb70f0341 ("block: rearrange a few request fields for better cache layout")
Reviewed-by:  Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 block/blk-mq.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 3ca877dc2b63..9e2c54585029 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -228,8 +228,10 @@ __blk_mq_alloc_request(struct blk_mq_alloc_data *data, unsigned int op)
 	if (tag != BLK_MQ_TAG_FAIL) {
 		rq = data->hctx->tags->rqs[tag];
 
+		/* Sanity check; clear stale flags */
+		rq->rq_flags = 0;
 		if (blk_mq_tag_busy(data->hctx)) {
-			rq->rq_flags = RQF_MQ_INFLIGHT;
+			rq->rq_flags |= RQF_MQ_INFLIGHT;
 			atomic_inc(&data->hctx->nr_active);
 		}
 
-- 
2.16.2

