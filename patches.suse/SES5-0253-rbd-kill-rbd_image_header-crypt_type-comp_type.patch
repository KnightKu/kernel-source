From: Ilya Dryomov <idryomov@gmail.com>
Date: Wed, 25 Jan 2017 18:16:21 +0100
Subject: rbd: kill rbd_image_header::{crypt_type,comp_type}
Git-commit: 24dca799fdbeeb0c955ef2f56a37461e6566aa07
Patch-mainline: v4.11-rc1
References: FATE#322288

Image format 1 is deprecated and format 2 doesn't have these.  Also,
__rbd_dev_create() takes care of zeroing (or otherwise initializing)
format 2 specific fields.

Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
Reviewed-by: Jason Dillaman <dillaman@redhat.com>
Acked-by: Luis Henriques <lhenriques@suse.com>
[luis: struct rbd_image_header is defined in librbd.h]
---
 drivers/block/rbd.c         |    7 -------
 drivers/block/rbd_types.h   |    3 ---
 include/linux/ceph/librbd.h |    2 --
 3 files changed, 12 deletions(-)

--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@ -868,12 +868,6 @@ static int rbd_header_from_disk(struct r
 	if (first_time) {
 		header->object_prefix = object_prefix;
 		header->obj_order = ondisk->options.order;
-		header->crypt_type = ondisk->options.crypt_type;
-		header->comp_type = ondisk->options.comp_type;
-		/* The rest aren't used for format 1 images */
-		header->stripe_unit = 0;
-		header->stripe_count = 0;
-		header->features = 0;
 	} else {
 		ceph_put_snap_context(header->snapc);
 		kfree(header->snap_names);
@@ -5737,7 +5731,6 @@ static int rbd_dev_v2_header_onetime(str
 		if (ret < 0)
 			goto out_err;
 	}
-	/* No support for crypto and compression type format 2 images */
 
 	return 0;
 out_err:
--- a/drivers/block/rbd_types.h
+++ b/drivers/block/rbd_types.h
@@ -46,9 +46,6 @@
 #define RBD_MIN_OBJ_ORDER       16
 #define RBD_MAX_OBJ_ORDER       30
 
-#define RBD_COMP_NONE		0
-#define RBD_CRYPT_NONE		0
-
 #define RBD_HEADER_TEXT		"<<< Rados Block Device Image >>>\n"
 #define RBD_HEADER_SIGNATURE	"RBD"
 #define RBD_HEADER_VERSION	"001.005"
--- a/include/linux/ceph/librbd.h
+++ b/include/linux/ceph/librbd.h
@@ -28,8 +28,6 @@ struct rbd_image_header {
 	/* These six fields never change for a given rbd image */
 	char *object_prefix;
 	__u8 obj_order;
-	__u8 crypt_type;
-	__u8 comp_type;
 	u64 stripe_unit;
 	u64 stripe_count;
 	u64 features;		/* Might be changeable someday? */
