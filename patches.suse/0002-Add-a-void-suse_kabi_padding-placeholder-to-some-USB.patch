From 7addb4724db6fb1cdf02f5a04cbd296d9b53c26e Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.de>
Date: Thu, 7 Feb 2013 17:29:03 +0100
Subject: [PATCH 2/3] Add a void* suse_kabi_padding placeholder to some USB
 structures
Patch-mainline: Never, kabi
References: fate#312013

---
 include/linux/usb.h        | 2 ++
 include/linux/usb/hcd.h    | 3 +++
 include/linux/usb/usbnet.h | 2 ++
 3 files changed, 7 insertions(+)

diff --git a/include/linux/usb.h b/include/linux/usb.h
index eca99c0..7309283 100644
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -1084,6 +1084,7 @@ struct usb_driver {
 	unsigned int supports_autosuspend:1;
 	unsigned int disable_hub_initiated_lpm:1;
 	unsigned int soft_unbind:1;
+	void *suse_kabi_padding;
 };
 #define	to_usb_driver(d) container_of(d, struct usb_driver, drvwrap.driver)
 
@@ -1457,6 +1458,7 @@ struct urb {
 	usb_complete_t complete;	/* (in) completion routine */
 	struct usb_iso_packet_descriptor iso_frame_desc[0];
 					/* (in) ISO ONLY */
+	void *suse_kabi_padding;
 };
 
 /* ----------------------------------------------------------------------- */
diff --git a/include/linux/usb/hcd.h b/include/linux/usb/hcd.h
index 9237210..19c0b91 100644
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -193,6 +193,7 @@ struct usb_hcd {
 	 * (ohci 32, uhci 1024, ehci 256/512/1024).
 	 */
 
+	void *suse_kabi_padding;
 	/* The HC driver's private data is stored at the end of
 	 * this structure.
 	 */
@@ -377,6 +378,8 @@ struct hc_driver {
 	int	(*disable_usb3_lpm_timeout)(struct usb_hcd *,
 			struct usb_device *, enum usb3_link_state state);
 	int	(*find_raw_port_number)(struct usb_hcd *, int);
+
+	void *suse_kabi_padding;
 };
 
 static inline int hcd_giveback_urb_in_bh(struct usb_hcd *hcd)
diff --git a/include/linux/usb/usbnet.h b/include/linux/usb/usbnet.h
index 0662e98..c5b16e7 100644
--- a/include/linux/usb/usbnet.h
+++ b/include/linux/usb/usbnet.h
@@ -78,6 +78,7 @@ struct usbnet {
 #		define EVENT_NO_RUNTIME_PM	9
 #		define EVENT_RX_KILL	10
 #		define EVENT_LINK_CHANGE	11
+	void *suse_kabi_padding;
 };
 
 static inline struct usb_driver *driver_of(struct usb_interface *intf)
@@ -161,6 +162,7 @@ struct driver_info {
 	int		out;		/* tx endpoint */
 
 	unsigned long	data;		/* Misc driver specific data */
+	void *suse_kabi_padding;
 };
 
 /* Minidrivers are just drivers using the "usbnet" core as a powerful
-- 
1.8.5.2

