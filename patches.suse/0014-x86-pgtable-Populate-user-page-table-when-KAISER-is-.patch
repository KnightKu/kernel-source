From 347d1d21b7f5e057c2793be7fd2350f10fcaccd0 Mon Sep 17 00:00:00 2001
From: Joerg Roedel <jroedel@suse.de>
Date: Tue, 13 Mar 2018 15:55:46 +0100
Subject: [PATCH 14/17] x86/pgtable: Populate user-page-table when KAISER is
 enabled
References: bsc#1068032 CVE-2017-5754
Patch-mainline: No, different upstream implementation

Make user the user-cr3 gets all the mapping in the
user-space address-range.

Signed-off-by: Joerg Roedel <jroedel@suse.de>
---
 arch/x86/include/asm/pgtable-2level.h | 6 ++++++
 arch/x86/include/asm/pgtable-3level.h | 4 ++++
 2 files changed, 10 insertions(+)

diff --git a/arch/x86/include/asm/pgtable-2level.h b/arch/x86/include/asm/pgtable-2level.h
index 98391db..aaaf1c9 100644
--- a/arch/x86/include/asm/pgtable-2level.h
+++ b/arch/x86/include/asm/pgtable-2level.h
@@ -18,6 +18,9 @@ static inline void native_set_pte(pte_t *ptep , pte_t pte)
 
 static inline void native_set_pmd(pmd_t *pmdp, pmd_t pmd)
 {
+#ifdef CONFIG_KAISER
+	pmdp->pud.pgd = kaiser_set_shadow_pgd(&pmdp->pud.pgd, pmd.pud.pgd);
+#endif
 	*pmdp = pmd;
 }
 
@@ -49,6 +52,9 @@ static inline pte_t native_ptep_get_and_clear(pte_t *xp)
 #ifdef CONFIG_SMP
 static inline pmd_t native_pmdp_get_and_clear(pmd_t *xp)
 {
+#ifdef CONFIG_KAISER
+	kaiser_set_shadow_pgd(&xp->pud.pgd, __pgd(0));
+#endif
 	return __pmd(xchg((pmdval_t *)xp, 0));
 }
 #else
diff --git a/arch/x86/include/asm/pgtable-3level.h b/arch/x86/include/asm/pgtable-3level.h
index cb00ccc..7d03a59 100644
--- a/arch/x86/include/asm/pgtable-3level.h
+++ b/arch/x86/include/asm/pgtable-3level.h
@@ -97,6 +97,10 @@ static inline void native_set_pmd(pmd_t *pmdp, pmd_t pmd)
 
 static inline void native_set_pud(pud_t *pudp, pud_t pud)
 {
+#ifdef CONFIG_KAISER
+	pudp->pgd = kaiser_set_shadow_pgd(&pudp->pgd, pud.pgd);
+#endif
+
 	set_64bit((unsigned long long *)(pudp), native_pud_val(pud));
 }
 
-- 
1.8.5.6

