From: Steffen Klassert <steffen.klassert@secunet.com>
Date: Thu, 13 Jul 2017 09:13:30 +0200
Subject: esp: Fix memleaks on error paths.
Git-commit: e6194923237f3952b955c343b65b211f36bce01c
Patch-mainline: v4.13
References: git-fixes

We leak the temporary allocated resources in error paths,
fix this by freeing them.

[js] backport to 4.4 -- no output_tail etc.

Fixes: fca11ebde3f ("esp4: Reorganize esp_output")
Fixes: 383d0350f2c ("esp6: Reorganize esp_output")
Fixes: 3f29770723f ("ipsec: check return value of skb_to_sgvec always")
Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 net/ipv4/esp4.c |    8 +++++---
 net/ipv6/esp6.c |    4 ++--
 2 files changed, 7 insertions(+), 5 deletions(-)

--- a/net/ipv4/esp4.c
+++ b/net/ipv4/esp4.c
@@ -272,7 +272,7 @@ static int esp_output(struct xfrm_state
 		           (unsigned char *)esph - skb->data,
 		           assoclen + ivlen + clen + alen);
 	if (unlikely(err < 0))
-		goto error;
+		goto error_free;
 	aead_request_set_crypt(req, sg, sg, ivlen + clen, iv);
 	aead_request_set_ad(req, assoclen);
 
@@ -299,8 +299,8 @@ static int esp_output(struct xfrm_state
 			esp_output_restore_header(skb);
 	}
 
+error_free:
 	kfree(tmp);
-
 error:
 	return err;
 }
@@ -483,8 +483,10 @@ static int esp_input(struct xfrm_state *
 
 	sg_init_table(sg, nfrags);
 	err = skb_to_sgvec(skb, sg, 0, skb->len);
-	if (unlikely(err < 0))
+	if (unlikely(err < 0)) {
+		kfree(tmp);
 		goto out;
+	}
 
 	aead_request_set_crypt(req, sg, sg, elen + ivlen, iv);
 	aead_request_set_ad(req, assoclen);
--- a/net/ipv6/esp6.c
+++ b/net/ipv6/esp6.c
@@ -252,7 +252,7 @@ static int esp6_output(struct xfrm_state
 		           (unsigned char *)esph - skb->data,
 		           assoclen + ivlen + clen + alen);
 	if (unlikely(err < 0))
-		goto error;
+		goto error_free;
 
 	aead_request_set_crypt(req, sg, sg, ivlen + clen, iv);
 	aead_request_set_ad(req, assoclen);
@@ -280,8 +280,8 @@ static int esp6_output(struct xfrm_state
 			esp_output_restore_header(skb);
 	}
 
+error_free:
 	kfree(tmp);
-
 error:
 	return err;
 }
