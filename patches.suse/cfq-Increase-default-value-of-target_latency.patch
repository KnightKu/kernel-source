From 33d2a62545b4ea0a7929add9c0b2d0d7d3149635 Mon Sep 17 00:00:00 2001
From: Mel Gorman <mgorman@suse.de>
Date: Wed, 18 Jun 2014 00:23:05 +0100
Subject: [PATCH] cfq: Increase default value of target_latency

References: VM Performance
Patch-mainline: Never, upstream does not want to change defaults

In earlier kernels, it was found that the existing CFQ default target_latency
resulted in poor performance on multi-threaded sequential read workloads.
Reverifying against kernel 4.4 indicates that the tuning change is no
longer required

This was evaluated on two machines
o a UMA machine, 8 cores and rotary storage
o A NUMA machine, 4 socket, 48 cores and SSD storage

tiobench UMA rotary
                                             4.4.0                 4.4.0
                                    readahead-v1r1              cfq-v1r1
Hmean    PotentialReadSpeed       130.41 (  0.00%)      130.41 (  0.00%)
Hmean    SeqRead-MB/sec-1         122.45 (  0.00%)      122.91 (  0.37%)
Hmean    SeqRead-MB/sec-2          97.32 (  0.00%)       97.97 (  0.66%)
Hmean    SeqRead-MB/sec-4          76.19 (  0.00%)       85.18 ( 11.79%)
Hmean    SeqRead-MB/sec-8          62.24 (  0.00%)       65.08 (  4.57%)
Hmean    SeqRead-MB/sec-16         84.44 (  0.00%)       86.35 (  2.27%)

tiobench NUMA ssd
Hmean    SeqRead-MB/sec-1         470.69 (  0.00%)      467.17 ( -0.75%)
Hmean    SeqRead-MB/sec-2         488.19 (  0.00%)      488.28 (  0.02%)
Hmean    SeqRead-MB/sec-4         492.53 (  0.00%)      493.54 (  0.20%)
Hmean    SeqRead-MB/sec-8         493.97 (  0.00%)      495.59 (  0.33%)
Hmean    SeqRead-MB/sec-16        490.83 (  0.00%)      494.82 (  0.81%)

tiobench is a weak benchmark as it does not guarantee that data is cache
cold. In this case, it shows that there is a small benefit on slow storage
for high thread counts but it should be possible to correlate this with
other tests.

paralleldd UMA rotary
                                  4.4.0                 4.4.0
                         readahead-v1r1              cfq-v1r1
Amean    Elapsd-1        5.40 (  0.00%)        5.44 ( -0.76%)
Amean    Elapsd-3        5.54 (  0.00%)        5.52 (  0.42%)
Amean    Elapsd-5        5.90 (  0.00%)        5.77 (  2.20%)
Amean    Elapsd-7        5.61 (  0.00%)        5.63 ( -0.35%)
Amean    Elapsd-8        5.73 (  0.00%)        5.68 (  0.84%)

paralleldd NUMA ssd
                                   4.4.0                 4.4.0
                          readahead-v1r1              cfq-v1r1
Amean    Elapsd-1         1.64 (  0.00%)        1.62 (  0.98%)
Amean    Elapsd-4         2.21 (  0.00%)        2.44 (-10.67%)
Amean    Elapsd-7         1.92 (  0.00%)        2.00 ( -4.24%)
Amean    Elapsd-12        1.88 (  0.00%)        1.97 ( -4.74%)
Amean    Elapsd-21        2.04 (  0.00%)        2.12 ( -4.07%)
Amean    Elapsd-30        2.44 (  0.00%)        2.55 ( -4.20%)
Amean    Elapsd-48        2.63 (  0.00%)        2.64 ( -0.63%)

The same benefits are not visible on paralleldd which guarantees data is
cache cold

bonnie UMA rotary
                                             4.4.0                     4.4.0
                                    readahead-v1r1                  cfq-v1r1
Hmean    SeqOut Char            81172.05 (  0.00%)        81457.18 (  0.35%)
Hmean    SeqOut Block          104116.24 (  0.00%)       105230.38 (  1.07%)
Hmean    SeqOut Rewrite         44596.23 (  0.00%)        44379.09 ( -0.49%)
Hmean    SeqIn  Char            91702.67 (  0.00%)        89955.74 ( -1.91%)
Hmean    SeqIn  Block          137245.71 (  0.00%)       136268.07 ( -0.71%)
Hmean    Random seeks             280.82 (  0.00%)          287.85 (  2.50%)
Hmean    SeqCreate ops              2.25 (  0.00%)            2.25 (  0.00%)
Hmean    SeqCreate read             2.25 (  0.00%)            2.25 (  0.00%)
Hmean    SeqCreate del            880.24 (  0.00%)          911.99 (  3.61%)
Hmean    RandCreate ops             2.25 (  0.00%)            2.25 (  0.00%)
Hmean    RandCreate read            2.25 (  0.00%)            2.25 (  0.00%)
Hmean    RandCreate del           878.80 (  0.00%)          915.65 (  4.19%)

bonnie NUMA ssd
bonnie
                                             4.4.0                     4.4.0
                                    readahead-v1r1                  cfq-v1r1
Hmean    SeqOut Char            58930.39 (  0.00%)        58703.42 ( -0.39%)
Hmean    SeqOut Block          261466.37 (  0.00%)       262503.10 (  0.40%)
Hmean    SeqOut Rewrite        161300.48 (  0.00%)       157820.33 ( -2.16%)
Hmean    SeqIn  Char            55699.16 (  0.00%)        55845.47 (  0.26%)
Hmean    SeqIn  Block          627565.09 (  0.00%)       627767.37 (  0.03%)
Hmean    Random seeks               0.00 (  0.00%)            0.00 (  0.00%)
Hmean    SeqCreate ops              1.00 (  0.00%)            1.50 ( 50.00%)
Hmean    SeqCreate read             3.00 (  0.00%)            3.00 (  0.00%)
Hmean    SeqCreate del             79.88 (  0.00%)           88.57 ( 10.88%)
Hmean    RandCreate ops             1.50 (  0.00%)            1.00 (-33.33%)
Hmean    RandCreate read            3.00 (  0.00%)            3.00 (  0.00%)
Hmean    RandCreate del            93.97 (  0.00%)           95.32 (  1.44%)

The differences are borderline. On the basis of these results, the patch
is not required against 4.4.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 block/cfq-iosched.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/block/cfq-iosched.c b/block/cfq-iosched.c
index 434944c..b0bd3a0 100644
--- a/block/cfq-iosched.c
+++ b/block/cfq-iosched.c
@@ -32,7 +32,7 @@ static int cfq_slice_async = HZ / 25;
 static const int cfq_slice_async_rq = 2;
 static int cfq_slice_idle = HZ / 125;
 static int cfq_group_idle = HZ / 125;
-static const int cfq_target_latency = HZ * 3/10; /* 300 ms */
+static const int cfq_target_latency = HZ * 6/10; /* 600 ms */
 static const int cfq_hist_divisor = 4;
 
 /*
