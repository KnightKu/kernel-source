From: Borislav Petkov <bp@suse.de>
Date: Sun, 17 Dec 2017 16:37:58 +0100
Subject: x86/CPU: Check speculation control CPUID bit
Patch-mainline: submitted on 2018/1/9
References: bsc#1068032

... and enable the corresponding flags.

Carved out from a patch by Tim Chen <tim.c.chen@linux.intel.com> and
improved.

After microcode reload, we need to check CPUID directly as we don't
update the X86_FEATURE flags after a reload.

While at it, remove the __cpuinitdata annotation of cpu_caps_set which
is just silly and shuts up an annoying warning. See:

  148f9bb87745 ("x86: delete __cpuinit usage from all x86 files")  

Signed-off-by: Borislav Petkov <bp@suse.de>
---
 arch/x86/include/asm/spec_ctrl.h |    1 +
 arch/x86/kernel/cpu/common.c     |    4 ++--
 arch/x86/kernel/cpu/intel.c      |    3 +++
 arch/x86/kernel/cpu/spec_ctrl.c  |   16 ++++++++++++++++
 arch/x86/kernel/microcode_core.c |    6 +++++-
 5 files changed, 27 insertions(+), 3 deletions(-)

--- a/arch/x86/include/asm/spec_ctrl.h
+++ b/arch/x86/include/asm/spec_ctrl.h
@@ -91,6 +91,7 @@ void x86_enable_ibrs(void);
 void x86_disable_ibrs(void);
 unsigned int x86_ibrs_enabled(void);
 unsigned int x86_ibpb_enabled(void);
+void x86_spec_check(void);
 
 static inline void x86_ibp_barrier(void)
 {
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -428,8 +428,8 @@ static const char *__cpuinit table_looku
 	return NULL;		/* Not found */
 }
 
-__u32 cpu_caps_cleared[NCAPINTS] __cpuinitdata;
-__u32 cpu_caps_set[NCAPINTS] __cpuinitdata;
+__u32 cpu_caps_cleared[NCAPINTS];
+__u32 cpu_caps_set[NCAPINTS];
 
 void load_percpu_segment(int cpu)
 {
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@ -14,6 +14,7 @@
 #include <asm/msr.h>
 #include <asm/bugs.h>
 #include <asm/cpu.h>
+#include <asm/spec_ctrl.h>
 
 #ifdef CONFIG_X86_64
 #include <linux/topology.h>
@@ -478,6 +479,8 @@ static void __cpuinit init_intel(struct
 				"ENERGY_PERF_BIAS: View and update with"
 				" cpupower-set(8)\n");
 	}
+
+	x86_spec_check();
 }
 
 #ifdef CONFIG_X86_32
--- a/arch/x86/kernel/cpu/spec_ctrl.c
+++ b/arch/x86/kernel/cpu/spec_ctrl.c
@@ -39,3 +39,19 @@ void x86_enable_ibrs(void)
 		native_wrmsrl(MSR_IA32_SPEC_CTRL, FEATURE_ENABLE_IBRS);
 }
 EXPORT_SYMBOL_GPL(x86_enable_ibrs);
+
+/*
+ * Called after upgrading microcode, check CPUID directly.
+ */
+void x86_spec_check(void)
+{
+	if (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) {
+		if (cpuid_edx(7) & BIT(26)) {
+			ibrs_state = 1;
+			ibpb_state = 1;
+
+			setup_force_cpu_cap(X86_FEATURE_SPEC_CTRL);
+		}
+	}
+}
+EXPORT_SYMBOL_GPL(x86_spec_check);
--- a/arch/x86/kernel/microcode_core.c
+++ b/arch/x86/kernel/microcode_core.c
@@ -87,6 +87,7 @@
 #include <asm/microcode.h>
 #include <asm/processor.h>
 #include <asm/perf_event.h>
+#include <asm/spec_ctrl.h>
 
 MODULE_DESCRIPTION("Microcode Update Driver");
 MODULE_AUTHOR("Tigran Aivazian <tigran@aivazian.fsnet.co.uk>");
@@ -321,8 +322,11 @@ static ssize_t reload_store(struct sys_d
 		if (!ret)
 			ret = tmp_ret;
 	}
-	if (!ret)
+	if (!ret) {
 		perf_check_microcode();
+		x86_spec_check();
+	}
+
 	mutex_unlock(&microcode_mutex);
 	put_online_cpus();
 
