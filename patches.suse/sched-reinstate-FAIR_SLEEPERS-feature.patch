Subject: sched: reinstate FAIR_SLEEPERS feature
From: Mike Galbraith <mgalbraith@suse.de>
Date: Tue Oct 18 15:16:42 CEST 2011
Patch-mainline: never, SUSE specific
References: bnc#724577

S390 does a lot of heavy lifting batch processing, where wakeup
preemption is neither desired nor beneficial.  SLE11-SP1 had
FAIR_SLEEPERS turned off because of this, but SP2 has no knob,
and mistakenly wired up CONFIG_FAIR_SLEEPERS_ON_BY_DEFAULT to
GENTLE_FAIR_SLEEPERS, applying full sleeper fairness only to
S390, where previously there was none at all.

Per agreement with IBM, restore the feature, but unlike SP1,
enable it for s390.  This makes FAIR_SLEEPERS_ON_BY_DEFAULT
superfluous, as all arches now have FAIR_SLEEPERS enabled, so
remove the config option.

Signed-off-by: Mike Galbraith <mgalbraith@suse.de>
---
 kernel/sched/fair.c     |    2 +-
 kernel/sched/features.h |    7 +++++++
 2 files changed, 8 insertions(+), 1 deletion(-)

--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -1751,7 +1751,7 @@ place_entity(struct cfs_rq *cfs_rq, stru
 		vruntime += sched_vslice(cfs_rq, se);
 
 	/* sleeps up to a single latency don't count. */
-	if (!initial) {
+	if (!initial && sched_feat(FAIR_SLEEPERS)) {
 		unsigned long thresh = sysctl_sched_latency;
 
 		/*
--- a/kernel/sched/features.h
+++ b/kernel/sched/features.h
@@ -1,4 +1,11 @@
 /*
+ * Disregards a certain amount of sleep time (sched_latency_ns) and
+ * considers the task to be running during that period. This gives it
+ * a service deficit on wakeup, allowing it to run sooner.
+ */
+SCHED_FEAT(FAIR_SLEEPERS, true)
+
+/*
  * Only give sleepers 50% of their service deficit. This allows
  * them to run sooner, but does not allow tons of sleepers to
  * rip the spread apart.
