From: Petr Mladek <pmladek@suse.cz>
Date: Fri, 31 Oct 2014 19:08:28 +0100
Subject: kgr: correctly remove replaced patch when using fast path
Patch-mainline: submitted for review
References: fate#313296

kgr_replace_all() allows to remove a patch immediately when it is not longer
used. It currently just puts the related module. But it should also remove
the patch from the kgr_patches list and decrease reference of the dependent
patches.

This patch adds kgr_refs_dec_limited() function. It decreases the reference
for all patches that were added before the given one.

Also it adds kgr_remove_patch_fast() that does all the remaining steps
to remove the patch from any use.

Signed-off-by: Petr Mladek <pmladek@suse.cz>
Reviewed-by: Jiri Kosina <jkosina@suse.cz>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/kgraft.c | 26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/kernel/kgraft.c b/kernel/kgraft.c
index 45a927626e59..092d419459de 100644
--- a/kernel/kgraft.c
+++ b/kernel/kgraft.c
@@ -112,6 +112,18 @@ static void kgr_refs_dec(void)
 		p->refs--;
 }
 
+/* decrease reference for all older patches */
+static void kgr_refs_dec_limited(struct kgr_patch *limit)
+{
+	struct kgr_patch *p;
+
+	list_for_each_entry(p, &kgr_patches, list) {
+		if (p == limit)
+			return;
+		p->refs--;
+	}
+}
+
 static int kgr_ftrace_enable(struct kgr_patch_fun *pf, struct ftrace_ops *fops)
 {
 	int ret;
@@ -170,6 +182,18 @@ static bool kgr_patch_contains(const struct kgr_patch *p, const char *name)
 }
 
 /*
+ * The patch is not longer used and can be removed immediately.
+ * This function does the same as kgr_finalize() for reverted patches.
+ * It just does not need to update the state of functions.
+ */
+static void kgr_remove_patch_fast(struct kgr_patch *patch)
+{
+	kgr_refs_dec_limited(patch);
+	list_del(&patch->list);
+	module_put(patch->owner);
+}
+
+/*
  * All patches from kgr_patches are obsoleted and will get replaced
  * by kgr_patch.
  */
@@ -197,7 +221,7 @@ static void kgr_replace_all(void)
 		if (needs_revert)
 			list_move(&p->list, &kgr_to_revert);
 		else
-			module_put(p->owner);
+			kgr_remove_patch_fast(p);
 	}
 }
 
-- 
2.1.3

