From: Jiri Kosina <jkosina@suse.cz>
Subject: [PATCH] x86/spec_ctrl: handle late setting of X86_FEATURE_SPEC_CTRL properly
Patch-mainline: Not yet, under development
References: bsc#1075994 bsc#1075091

We can't do late alternatives patching for X86_FEATURE_SPEC_CTRL (as we're
not calling alternative_instrctions() after changing the feature flags
after late ucode loading, and late alternatives support is not there).

Therefore drop the X86_FEATURE_SPEC_CTRL-alternative-dependent skipping
over the whole region in _ENABLE/_DISABLE macros for IBRS, and always
explicitly call x86_ibrs_enabled() unconditionally.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/include/asm/spec_ctrl.h |    3 ---
 1 file changed, 3 deletions(-)

--- a/arch/x86/include/asm/spec_ctrl.h
+++ b/arch/x86/include/asm/spec_ctrl.h
@@ -16,7 +16,6 @@
 .endm
 
 .macro ENABLE_IBRS_CLOBBER
-	ALTERNATIVE "jmp .Lend_\@", "", X86_FEATURE_SPEC_CTRL
 	call x86_ibrs_enabled
 	test %eax, %eax
 	jz .Llfence_\@
@@ -31,7 +30,6 @@
 
 
 .macro ENABLE_IBRS
-	ALTERNATIVE "jmp .Lend_\@", "", X86_FEATURE_SPEC_CTRL
 
 	pushq %rax
 
@@ -58,7 +56,6 @@
 
 
 .macro DISABLE_IBRS
-	ALTERNATIVE "jmp .Lend_\@", "", X86_FEATURE_SPEC_CTRL
 
 	pushq %rax
 
